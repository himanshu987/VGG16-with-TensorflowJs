{"version":3,"file":"tf-converter.js","sources":["../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../src/data/compiled_api.js","../src/operations/executors/utils.ts","../src/operations/op_list/arithmetic.ts","../src/operations/op_list/basic_math.ts","../src/operations/op_list/control.ts","../src/operations/op_list/convolution.ts","../src/operations/op_list/creation.ts","../src/operations/op_list/dynamic.ts","../src/operations/op_list/evaluation.ts","../src/operations/op_list/graph.ts","../src/operations/op_list/image.ts","../src/operations/op_list/logical.ts","../src/operations/op_list/matrices.ts","../src/operations/op_list/normalization.ts","../src/operations/op_list/reduction.ts","../src/operations/op_list/slice_join.ts","../src/operations/op_list/transformation.ts","../src/operations/operation_mapper.ts","../src/operations/executors/arithmetic_executor.ts","../src/operations/executors/basic_math_executor.ts","../src/executor/tensor_array.ts","../src/operations/executors/control_executor.ts","../src/operations/executors/convolution_executor.ts","../src/operations/executors/creation_executor.ts","../src/operations/executors/dynamic_executor.ts","../src/operations/executors/evaluation_executor.ts","../src/operations/executors/graph_executor.ts","../src/operations/executors/image_executor.ts","../src/operations/executors/logical_executor.ts","../src/operations/executors/matrices_executor.ts","../src/operations/executors/normalization_executor.ts","../src/operations/executors/reduction_executor.ts","../src/operations/executors/slice_join_executor.ts","../src/operations/executors/transformation_executor.ts","../src/operations/operation_executor.ts","../src/executor/execution_context.ts","../src/executor/graph_executor.ts","../src/executor/frozen_model.ts","../src/version.ts"],"sourcesContent":["\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n","// minimal library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-minimal\");\r\n","/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.tensorflow = (function() {\n\n    var tensorflow = {};\n\n    tensorflow.Any = (function() {\n\n        function Any(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        Any.prototype.typeUrl = \"\";\n        Any.prototype.value = $util.newBuffer([]);\n\n        Any.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.Any();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.typeUrl = r.string();\n                    break;\n                case 2:\n                    m.value = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return Any;\n    })();\n\n    tensorflow.DataType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"DT_INVALID\"] = 0;\n        values[valuesById[1] = \"DT_FLOAT\"] = 1;\n        values[valuesById[2] = \"DT_DOUBLE\"] = 2;\n        values[valuesById[3] = \"DT_INT32\"] = 3;\n        values[valuesById[4] = \"DT_UINT8\"] = 4;\n        values[valuesById[5] = \"DT_INT16\"] = 5;\n        values[valuesById[6] = \"DT_INT8\"] = 6;\n        values[valuesById[7] = \"DT_STRING\"] = 7;\n        values[valuesById[8] = \"DT_COMPLEX64\"] = 8;\n        values[valuesById[9] = \"DT_INT64\"] = 9;\n        values[valuesById[10] = \"DT_BOOL\"] = 10;\n        values[valuesById[11] = \"DT_QINT8\"] = 11;\n        values[valuesById[12] = \"DT_QUINT8\"] = 12;\n        values[valuesById[13] = \"DT_QINT32\"] = 13;\n        values[valuesById[14] = \"DT_BFLOAT16\"] = 14;\n        values[valuesById[101] = \"DT_FLOAT_REF\"] = 101;\n        values[valuesById[102] = \"DT_DOUBLE_REF\"] = 102;\n        values[valuesById[103] = \"DT_INT32_REF\"] = 103;\n        values[valuesById[104] = \"DT_UINT8_REF\"] = 104;\n        values[valuesById[105] = \"DT_INT16_REF\"] = 105;\n        values[valuesById[106] = \"DT_INT8_REF\"] = 106;\n        values[valuesById[107] = \"DT_STRING_REF\"] = 107;\n        values[valuesById[108] = \"DT_COMPLEX64_REF\"] = 108;\n        values[valuesById[109] = \"DT_INT64_REF\"] = 109;\n        values[valuesById[110] = \"DT_BOOL_REF\"] = 110;\n        values[valuesById[111] = \"DT_QINT8_REF\"] = 111;\n        values[valuesById[112] = \"DT_QUINT8_REF\"] = 112;\n        values[valuesById[113] = \"DT_QINT32_REF\"] = 113;\n        values[valuesById[114] = \"DT_BFLOAT16_REF\"] = 114;\n        return values;\n    })();\n\n    tensorflow.TensorShape = (function() {\n\n        function TensorShape(p) {\n            this.dim = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        TensorShape.prototype.dim = $util.emptyArray;\n        TensorShape.prototype.unknownRank = false;\n\n        TensorShape.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorShape();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 2:\n                    if (!(m.dim && m.dim.length))\n                        m.dim = [];\n                    m.dim.push($root.tensorflow.TensorShape.Dim.decode(r, r.uint32()));\n                    break;\n                case 3:\n                    m.unknownRank = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        TensorShape.Dim = (function() {\n\n            function Dim(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            Dim.prototype.size = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n            Dim.prototype.name = \"\";\n\n            Dim.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorShape.Dim();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.size = r.int64();\n                        break;\n                    case 2:\n                        m.name = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return Dim;\n        })();\n\n        return TensorShape;\n    })();\n\n    tensorflow.Tensor = (function() {\n\n        function Tensor(p) {\n            this.floatVal = [];\n            this.doubleVal = [];\n            this.intVal = [];\n            this.stringVal = [];\n            this.scomplexVal = [];\n            this.int64Val = [];\n            this.boolVal = [];\n            this.uint32Val = [];\n            this.uint64Val = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        Tensor.prototype.dtype = 0;\n        Tensor.prototype.tensorShape = null;\n        Tensor.prototype.versionNumber = 0;\n        Tensor.prototype.tensorContent = $util.newBuffer([]);\n        Tensor.prototype.floatVal = $util.emptyArray;\n        Tensor.prototype.doubleVal = $util.emptyArray;\n        Tensor.prototype.intVal = $util.emptyArray;\n        Tensor.prototype.stringVal = $util.emptyArray;\n        Tensor.prototype.scomplexVal = $util.emptyArray;\n        Tensor.prototype.int64Val = $util.emptyArray;\n        Tensor.prototype.boolVal = $util.emptyArray;\n        Tensor.prototype.uint32Val = $util.emptyArray;\n        Tensor.prototype.uint64Val = $util.emptyArray;\n\n        Tensor.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.Tensor();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.dtype = r.int32();\n                    break;\n                case 2:\n                    m.tensorShape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.versionNumber = r.int32();\n                    break;\n                case 4:\n                    m.tensorContent = r.bytes();\n                    break;\n                case 5:\n                    if (!(m.floatVal && m.floatVal.length))\n                        m.floatVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.floatVal.push(r.float());\n                    } else\n                        m.floatVal.push(r.float());\n                    break;\n                case 6:\n                    if (!(m.doubleVal && m.doubleVal.length))\n                        m.doubleVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.doubleVal.push(r.double());\n                    } else\n                        m.doubleVal.push(r.double());\n                    break;\n                case 7:\n                    if (!(m.intVal && m.intVal.length))\n                        m.intVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.intVal.push(r.int32());\n                    } else\n                        m.intVal.push(r.int32());\n                    break;\n                case 8:\n                    if (!(m.stringVal && m.stringVal.length))\n                        m.stringVal = [];\n                    m.stringVal.push(r.bytes());\n                    break;\n                case 9:\n                    if (!(m.scomplexVal && m.scomplexVal.length))\n                        m.scomplexVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.scomplexVal.push(r.float());\n                    } else\n                        m.scomplexVal.push(r.float());\n                    break;\n                case 10:\n                    if (!(m.int64Val && m.int64Val.length))\n                        m.int64Val = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.int64Val.push(r.int64());\n                    } else\n                        m.int64Val.push(r.int64());\n                    break;\n                case 11:\n                    if (!(m.boolVal && m.boolVal.length))\n                        m.boolVal = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.boolVal.push(r.bool());\n                    } else\n                        m.boolVal.push(r.bool());\n                    break;\n                case 16:\n                    if (!(m.uint32Val && m.uint32Val.length))\n                        m.uint32Val = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.uint32Val.push(r.uint32());\n                    } else\n                        m.uint32Val.push(r.uint32());\n                    break;\n                case 17:\n                    if (!(m.uint64Val && m.uint64Val.length))\n                        m.uint64Val = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.uint64Val.push(r.uint64());\n                    } else\n                        m.uint64Val.push(r.uint64());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return Tensor;\n    })();\n\n    tensorflow.AttrValue = (function() {\n\n        function AttrValue(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        AttrValue.prototype.list = null;\n        AttrValue.prototype.s = $util.newBuffer([]);\n        AttrValue.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n        AttrValue.prototype.f = 0;\n        AttrValue.prototype.b = false;\n        AttrValue.prototype.type = 0;\n        AttrValue.prototype.shape = null;\n        AttrValue.prototype.tensor = null;\n        AttrValue.prototype.placeholder = \"\";\n        AttrValue.prototype.func = null;\n\n        var $oneOfFields;\n\n        Object.defineProperty(AttrValue.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"list\", \"s\", \"i\", \"f\", \"b\", \"type\", \"shape\", \"tensor\", \"placeholder\", \"func\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        AttrValue.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.AttrValue();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.list = $root.tensorflow.AttrValue.ListValue.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.s = r.bytes();\n                    break;\n                case 3:\n                    m.i = r.int64();\n                    break;\n                case 4:\n                    m.f = r.float();\n                    break;\n                case 5:\n                    m.b = r.bool();\n                    break;\n                case 6:\n                    m.type = r.int32();\n                    break;\n                case 7:\n                    m.shape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                    break;\n                case 8:\n                    m.tensor = $root.tensorflow.Tensor.decode(r, r.uint32());\n                    break;\n                case 9:\n                    m.placeholder = r.string();\n                    break;\n                case 10:\n                    m.func = $root.tensorflow.NameAttrList.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        AttrValue.ListValue = (function() {\n\n            function ListValue(p) {\n                this.s = [];\n                this.i = [];\n                this.f = [];\n                this.b = [];\n                this.type = [];\n                this.shape = [];\n                this.tensor = [];\n                this.func = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            ListValue.prototype.s = $util.emptyArray;\n            ListValue.prototype.i = $util.emptyArray;\n            ListValue.prototype.f = $util.emptyArray;\n            ListValue.prototype.b = $util.emptyArray;\n            ListValue.prototype.type = $util.emptyArray;\n            ListValue.prototype.shape = $util.emptyArray;\n            ListValue.prototype.tensor = $util.emptyArray;\n            ListValue.prototype.func = $util.emptyArray;\n\n            ListValue.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.AttrValue.ListValue();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 2:\n                        if (!(m.s && m.s.length))\n                            m.s = [];\n                        m.s.push(r.bytes());\n                        break;\n                    case 3:\n                        if (!(m.i && m.i.length))\n                            m.i = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.i.push(r.int64());\n                        } else\n                            m.i.push(r.int64());\n                        break;\n                    case 4:\n                        if (!(m.f && m.f.length))\n                            m.f = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.f.push(r.float());\n                        } else\n                            m.f.push(r.float());\n                        break;\n                    case 5:\n                        if (!(m.b && m.b.length))\n                            m.b = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.b.push(r.bool());\n                        } else\n                            m.b.push(r.bool());\n                        break;\n                    case 6:\n                        if (!(m.type && m.type.length))\n                            m.type = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.type.push(r.int32());\n                        } else\n                            m.type.push(r.int32());\n                        break;\n                    case 7:\n                        if (!(m.shape && m.shape.length))\n                            m.shape = [];\n                        m.shape.push($root.tensorflow.TensorShape.decode(r, r.uint32()));\n                        break;\n                    case 8:\n                        if (!(m.tensor && m.tensor.length))\n                            m.tensor = [];\n                        m.tensor.push($root.tensorflow.Tensor.decode(r, r.uint32()));\n                        break;\n                    case 9:\n                        if (!(m.func && m.func.length))\n                            m.func = [];\n                        m.func.push($root.tensorflow.NameAttrList.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return ListValue;\n        })();\n\n        return AttrValue;\n    })();\n\n    tensorflow.NameAttrList = (function() {\n\n        function NameAttrList(p) {\n            this.attr = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        NameAttrList.prototype.name = \"\";\n        NameAttrList.prototype.attr = $util.emptyObject;\n\n        NameAttrList.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.NameAttrList(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    r.skip().pos++;\n                    if (m.attr === $util.emptyObject)\n                        m.attr = {};\n                    k = r.string();\n                    r.pos++;\n                    m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NameAttrList;\n    })();\n\n    tensorflow.NodeDef = (function() {\n\n        function NodeDef(p) {\n            this.input = [];\n            this.attr = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        NodeDef.prototype.name = \"\";\n        NodeDef.prototype.op = \"\";\n        NodeDef.prototype.input = $util.emptyArray;\n        NodeDef.prototype.device = \"\";\n        NodeDef.prototype.attr = $util.emptyObject;\n\n        NodeDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.NodeDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    m.op = r.string();\n                    break;\n                case 3:\n                    if (!(m.input && m.input.length))\n                        m.input = [];\n                    m.input.push(r.string());\n                    break;\n                case 4:\n                    m.device = r.string();\n                    break;\n                case 5:\n                    r.skip().pos++;\n                    if (m.attr === $util.emptyObject)\n                        m.attr = {};\n                    k = r.string();\n                    r.pos++;\n                    m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return NodeDef;\n    })();\n\n    tensorflow.VersionDef = (function() {\n\n        function VersionDef(p) {\n            this.badConsumers = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        VersionDef.prototype.producer = 0;\n        VersionDef.prototype.minConsumer = 0;\n        VersionDef.prototype.badConsumers = $util.emptyArray;\n\n        VersionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.VersionDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.producer = r.int32();\n                    break;\n                case 2:\n                    m.minConsumer = r.int32();\n                    break;\n                case 3:\n                    if (!(m.badConsumers && m.badConsumers.length))\n                        m.badConsumers = [];\n                    if ((t & 7) === 2) {\n                        var c2 = r.uint32() + r.pos;\n                        while (r.pos < c2)\n                            m.badConsumers.push(r.int32());\n                    } else\n                        m.badConsumers.push(r.int32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return VersionDef;\n    })();\n\n    tensorflow.GraphDef = (function() {\n\n        function GraphDef(p) {\n            this.node = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        GraphDef.prototype.node = $util.emptyArray;\n        GraphDef.prototype.versions = null;\n        GraphDef.prototype.library = null;\n\n        GraphDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.GraphDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.node && m.node.length))\n                        m.node = [];\n                    m.node.push($root.tensorflow.NodeDef.decode(r, r.uint32()));\n                    break;\n                case 4:\n                    m.versions = $root.tensorflow.VersionDef.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.library = $root.tensorflow.FunctionDefLibrary.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GraphDef;\n    })();\n\n    tensorflow.CollectionDef = (function() {\n\n        function CollectionDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        CollectionDef.prototype.nodeList = null;\n        CollectionDef.prototype.bytesList = null;\n        CollectionDef.prototype.int64List = null;\n        CollectionDef.prototype.floatList = null;\n        CollectionDef.prototype.anyList = null;\n\n        var $oneOfFields;\n\n        Object.defineProperty(CollectionDef.prototype, \"kind\", {\n            get: $util.oneOfGetter($oneOfFields = [\"nodeList\", \"bytesList\", \"int64List\", \"floatList\", \"anyList\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        CollectionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.nodeList = $root.tensorflow.CollectionDef.NodeList.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.bytesList = $root.tensorflow.CollectionDef.BytesList.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.int64List = $root.tensorflow.CollectionDef.Int64List.decode(r, r.uint32());\n                    break;\n                case 4:\n                    m.floatList = $root.tensorflow.CollectionDef.FloatList.decode(r, r.uint32());\n                    break;\n                case 5:\n                    m.anyList = $root.tensorflow.CollectionDef.AnyList.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        CollectionDef.NodeList = (function() {\n\n            function NodeList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            NodeList.prototype.value = $util.emptyArray;\n\n            NodeList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.NodeList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        m.value.push(r.string());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return NodeList;\n        })();\n\n        CollectionDef.BytesList = (function() {\n\n            function BytesList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            BytesList.prototype.value = $util.emptyArray;\n\n            BytesList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.BytesList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        m.value.push(r.bytes());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return BytesList;\n        })();\n\n        CollectionDef.Int64List = (function() {\n\n            function Int64List(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            Int64List.prototype.value = $util.emptyArray;\n\n            Int64List.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.Int64List();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.value.push(r.int64());\n                        } else\n                            m.value.push(r.int64());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return Int64List;\n        })();\n\n        CollectionDef.FloatList = (function() {\n\n            function FloatList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            FloatList.prototype.value = $util.emptyArray;\n\n            FloatList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.FloatList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        if ((t & 7) === 2) {\n                            var c2 = r.uint32() + r.pos;\n                            while (r.pos < c2)\n                                m.value.push(r.float());\n                        } else\n                            m.value.push(r.float());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return FloatList;\n        })();\n\n        CollectionDef.AnyList = (function() {\n\n            function AnyList(p) {\n                this.value = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            AnyList.prototype.value = $util.emptyArray;\n\n            AnyList.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.CollectionDef.AnyList();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        if (!(m.value && m.value.length))\n                            m.value = [];\n                        m.value.push($root.tensorflow.Any.decode(r, r.uint32()));\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return AnyList;\n        })();\n\n        return CollectionDef;\n    })();\n\n    tensorflow.SaverDef = (function() {\n\n        function SaverDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        SaverDef.prototype.filenameTensorName = \"\";\n        SaverDef.prototype.saveTensorName = \"\";\n        SaverDef.prototype.restoreOpName = \"\";\n        SaverDef.prototype.maxToKeep = 0;\n        SaverDef.prototype.sharded = false;\n        SaverDef.prototype.keepCheckpointEveryNHours = 0;\n        SaverDef.prototype.version = 0;\n\n        SaverDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.SaverDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.filenameTensorName = r.string();\n                    break;\n                case 2:\n                    m.saveTensorName = r.string();\n                    break;\n                case 3:\n                    m.restoreOpName = r.string();\n                    break;\n                case 4:\n                    m.maxToKeep = r.int32();\n                    break;\n                case 5:\n                    m.sharded = r.bool();\n                    break;\n                case 6:\n                    m.keepCheckpointEveryNHours = r.float();\n                    break;\n                case 7:\n                    m.version = r.int32();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        SaverDef.CheckpointFormatVersion = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"LEGACY\"] = 0;\n            values[valuesById[1] = \"V1\"] = 1;\n            values[valuesById[2] = \"V2\"] = 2;\n            return values;\n        })();\n\n        return SaverDef;\n    })();\n\n    tensorflow.TensorInfo = (function() {\n\n        function TensorInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        TensorInfo.prototype.name = \"\";\n        TensorInfo.prototype.cooSparse = null;\n        TensorInfo.prototype.dtype = 0;\n        TensorInfo.prototype.tensorShape = null;\n\n        var $oneOfFields;\n\n        Object.defineProperty(TensorInfo.prototype, \"encoding\", {\n            get: $util.oneOfGetter($oneOfFields = [\"name\", \"cooSparse\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        TensorInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 4:\n                    m.cooSparse = $root.tensorflow.TensorInfo.CooSparse.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.dtype = r.int32();\n                    break;\n                case 3:\n                    m.tensorShape = $root.tensorflow.TensorShape.decode(r, r.uint32());\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        TensorInfo.CooSparse = (function() {\n\n            function CooSparse(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            CooSparse.prototype.valuesTensorName = \"\";\n            CooSparse.prototype.indicesTensorName = \"\";\n            CooSparse.prototype.denseShapeTensorName = \"\";\n\n            CooSparse.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.TensorInfo.CooSparse();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.valuesTensorName = r.string();\n                        break;\n                    case 2:\n                        m.indicesTensorName = r.string();\n                        break;\n                    case 3:\n                        m.denseShapeTensorName = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return CooSparse;\n        })();\n\n        return TensorInfo;\n    })();\n\n    tensorflow.SignatureDef = (function() {\n\n        function SignatureDef(p) {\n            this.inputs = {};\n            this.outputs = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        SignatureDef.prototype.inputs = $util.emptyObject;\n        SignatureDef.prototype.outputs = $util.emptyObject;\n        SignatureDef.prototype.methodName = \"\";\n\n        SignatureDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.SignatureDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    r.skip().pos++;\n                    if (m.inputs === $util.emptyObject)\n                        m.inputs = {};\n                    k = r.string();\n                    r.pos++;\n                    m.inputs[k] = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                    break;\n                case 2:\n                    r.skip().pos++;\n                    if (m.outputs === $util.emptyObject)\n                        m.outputs = {};\n                    k = r.string();\n                    r.pos++;\n                    m.outputs[k] = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.methodName = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SignatureDef;\n    })();\n\n    tensorflow.AssetFileDef = (function() {\n\n        function AssetFileDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        AssetFileDef.prototype.tensorInfo = null;\n        AssetFileDef.prototype.filename = \"\";\n\n        AssetFileDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.AssetFileDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.tensorInfo = $root.tensorflow.TensorInfo.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.filename = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return AssetFileDef;\n    })();\n\n    tensorflow.OpDef = (function() {\n\n        function OpDef(p) {\n            this.inputArg = [];\n            this.outputArg = [];\n            this.attr = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        OpDef.prototype.name = \"\";\n        OpDef.prototype.inputArg = $util.emptyArray;\n        OpDef.prototype.outputArg = $util.emptyArray;\n        OpDef.prototype.attr = $util.emptyArray;\n        OpDef.prototype.deprecation = null;\n        OpDef.prototype.summary = \"\";\n        OpDef.prototype.description = \"\";\n        OpDef.prototype.isCommutative = false;\n        OpDef.prototype.isAggregate = false;\n        OpDef.prototype.isStateful = false;\n        OpDef.prototype.allowsUninitializedInput = false;\n\n        OpDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.name = r.string();\n                    break;\n                case 2:\n                    if (!(m.inputArg && m.inputArg.length))\n                        m.inputArg = [];\n                    m.inputArg.push($root.tensorflow.OpDef.ArgDef.decode(r, r.uint32()));\n                    break;\n                case 3:\n                    if (!(m.outputArg && m.outputArg.length))\n                        m.outputArg = [];\n                    m.outputArg.push($root.tensorflow.OpDef.ArgDef.decode(r, r.uint32()));\n                    break;\n                case 4:\n                    if (!(m.attr && m.attr.length))\n                        m.attr = [];\n                    m.attr.push($root.tensorflow.OpDef.AttrDef.decode(r, r.uint32()));\n                    break;\n                case 8:\n                    m.deprecation = $root.tensorflow.OpDef.OpDeprecation.decode(r, r.uint32());\n                    break;\n                case 5:\n                    m.summary = r.string();\n                    break;\n                case 6:\n                    m.description = r.string();\n                    break;\n                case 18:\n                    m.isCommutative = r.bool();\n                    break;\n                case 16:\n                    m.isAggregate = r.bool();\n                    break;\n                case 17:\n                    m.isStateful = r.bool();\n                    break;\n                case 19:\n                    m.allowsUninitializedInput = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        OpDef.ArgDef = (function() {\n\n            function ArgDef(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            ArgDef.prototype.name = \"\";\n            ArgDef.prototype.description = \"\";\n            ArgDef.prototype.type = 0;\n            ArgDef.prototype.typeAttr = \"\";\n            ArgDef.prototype.numberAttr = \"\";\n            ArgDef.prototype.typeListAttr = \"\";\n            ArgDef.prototype.isRef = false;\n\n            ArgDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef.ArgDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 2:\n                        m.description = r.string();\n                        break;\n                    case 3:\n                        m.type = r.int32();\n                        break;\n                    case 4:\n                        m.typeAttr = r.string();\n                        break;\n                    case 5:\n                        m.numberAttr = r.string();\n                        break;\n                    case 6:\n                        m.typeListAttr = r.string();\n                        break;\n                    case 16:\n                        m.isRef = r.bool();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return ArgDef;\n        })();\n\n        OpDef.AttrDef = (function() {\n\n            function AttrDef(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            AttrDef.prototype.name = \"\";\n            AttrDef.prototype.type = \"\";\n            AttrDef.prototype.defaultValue = null;\n            AttrDef.prototype.description = \"\";\n            AttrDef.prototype.hasMinimum = false;\n            AttrDef.prototype.minimum = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n            AttrDef.prototype.allowedValues = null;\n\n            AttrDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef.AttrDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.name = r.string();\n                        break;\n                    case 2:\n                        m.type = r.string();\n                        break;\n                    case 3:\n                        m.defaultValue = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                        break;\n                    case 4:\n                        m.description = r.string();\n                        break;\n                    case 5:\n                        m.hasMinimum = r.bool();\n                        break;\n                    case 6:\n                        m.minimum = r.int64();\n                        break;\n                    case 7:\n                        m.allowedValues = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return AttrDef;\n        })();\n\n        OpDef.OpDeprecation = (function() {\n\n            function OpDeprecation(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            OpDeprecation.prototype.version = 0;\n            OpDeprecation.prototype.explanation = \"\";\n\n            OpDeprecation.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpDef.OpDeprecation();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.version = r.int32();\n                        break;\n                    case 2:\n                        m.explanation = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return OpDeprecation;\n        })();\n\n        return OpDef;\n    })();\n\n    tensorflow.OpList = (function() {\n\n        function OpList(p) {\n            this.op = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        OpList.prototype.op = $util.emptyArray;\n\n        OpList.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.OpList();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m.op && m.op.length))\n                        m.op = [];\n                    m.op.push($root.tensorflow.OpDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return OpList;\n    })();\n\n    tensorflow.MetaGraphDef = (function() {\n\n        function MetaGraphDef(p) {\n            this.collectionDef = {};\n            this.signatureDef = {};\n            this.assetFileDef = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        MetaGraphDef.prototype.metaInfoDef = null;\n        MetaGraphDef.prototype.graphDef = null;\n        MetaGraphDef.prototype.saverDef = null;\n        MetaGraphDef.prototype.collectionDef = $util.emptyObject;\n        MetaGraphDef.prototype.signatureDef = $util.emptyObject;\n        MetaGraphDef.prototype.assetFileDef = $util.emptyArray;\n\n        MetaGraphDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.MetaGraphDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.metaInfoDef = $root.tensorflow.MetaGraphDef.MetaInfoDef.decode(r, r.uint32());\n                    break;\n                case 2:\n                    m.graphDef = $root.tensorflow.GraphDef.decode(r, r.uint32());\n                    break;\n                case 3:\n                    m.saverDef = $root.tensorflow.SaverDef.decode(r, r.uint32());\n                    break;\n                case 4:\n                    r.skip().pos++;\n                    if (m.collectionDef === $util.emptyObject)\n                        m.collectionDef = {};\n                    k = r.string();\n                    r.pos++;\n                    m.collectionDef[k] = $root.tensorflow.CollectionDef.decode(r, r.uint32());\n                    break;\n                case 5:\n                    r.skip().pos++;\n                    if (m.signatureDef === $util.emptyObject)\n                        m.signatureDef = {};\n                    k = r.string();\n                    r.pos++;\n                    m.signatureDef[k] = $root.tensorflow.SignatureDef.decode(r, r.uint32());\n                    break;\n                case 6:\n                    if (!(m.assetFileDef && m.assetFileDef.length))\n                        m.assetFileDef = [];\n                    m.assetFileDef.push($root.tensorflow.AssetFileDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        MetaGraphDef.MetaInfoDef = (function() {\n\n            function MetaInfoDef(p) {\n                this.tags = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            MetaInfoDef.prototype.metaGraphVersion = \"\";\n            MetaInfoDef.prototype.strippedOpList = null;\n            MetaInfoDef.prototype.anyInfo = null;\n            MetaInfoDef.prototype.tags = $util.emptyArray;\n            MetaInfoDef.prototype.tensorflowVersion = \"\";\n            MetaInfoDef.prototype.tensorflowGitVersion = \"\";\n\n            MetaInfoDef.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.MetaGraphDef.MetaInfoDef();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.metaGraphVersion = r.string();\n                        break;\n                    case 2:\n                        m.strippedOpList = $root.tensorflow.OpList.decode(r, r.uint32());\n                        break;\n                    case 3:\n                        m.anyInfo = $root.tensorflow.Any.decode(r, r.uint32());\n                        break;\n                    case 4:\n                        if (!(m.tags && m.tags.length))\n                            m.tags = [];\n                        m.tags.push(r.string());\n                        break;\n                    case 5:\n                        m.tensorflowVersion = r.string();\n                        break;\n                    case 6:\n                        m.tensorflowGitVersion = r.string();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            return MetaInfoDef;\n        })();\n\n        return MetaGraphDef;\n    })();\n\n    tensorflow.SavedModel = (function() {\n\n        function SavedModel(p) {\n            this.metaGraphs = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        SavedModel.prototype.savedModelSchemaVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n        SavedModel.prototype.metaGraphs = $util.emptyArray;\n\n        SavedModel.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.SavedModel();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.savedModelSchemaVersion = r.int64();\n                    break;\n                case 2:\n                    if (!(m.metaGraphs && m.metaGraphs.length))\n                        m.metaGraphs = [];\n                    m.metaGraphs.push($root.tensorflow.MetaGraphDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return SavedModel;\n    })();\n\n    tensorflow.FunctionDefLibrary = (function() {\n\n        function FunctionDefLibrary(p) {\n            this[\"function\"] = [];\n            this.gradient = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        FunctionDefLibrary.prototype[\"function\"] = $util.emptyArray;\n        FunctionDefLibrary.prototype.gradient = $util.emptyArray;\n\n        FunctionDefLibrary.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.FunctionDefLibrary();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    if (!(m[\"function\"] && m[\"function\"].length))\n                        m[\"function\"] = [];\n                    m[\"function\"].push($root.tensorflow.FunctionDef.decode(r, r.uint32()));\n                    break;\n                case 2:\n                    if (!(m.gradient && m.gradient.length))\n                        m.gradient = [];\n                    m.gradient.push($root.tensorflow.GradientDef.decode(r, r.uint32()));\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return FunctionDefLibrary;\n    })();\n\n    tensorflow.FunctionDef = (function() {\n\n        function FunctionDef(p) {\n            this.attr = {};\n            this.nodeDef = [];\n            this.ret = {};\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        FunctionDef.prototype.signature = null;\n        FunctionDef.prototype.attr = $util.emptyObject;\n        FunctionDef.prototype.nodeDef = $util.emptyArray;\n        FunctionDef.prototype.ret = $util.emptyObject;\n\n        FunctionDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.FunctionDef(), k;\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.signature = $root.tensorflow.OpDef.decode(r, r.uint32());\n                    break;\n                case 5:\n                    r.skip().pos++;\n                    if (m.attr === $util.emptyObject)\n                        m.attr = {};\n                    k = r.string();\n                    r.pos++;\n                    m.attr[k] = $root.tensorflow.AttrValue.decode(r, r.uint32());\n                    break;\n                case 3:\n                    if (!(m.nodeDef && m.nodeDef.length))\n                        m.nodeDef = [];\n                    m.nodeDef.push($root.tensorflow.NodeDef.decode(r, r.uint32()));\n                    break;\n                case 4:\n                    r.skip().pos++;\n                    if (m.ret === $util.emptyObject)\n                        m.ret = {};\n                    k = r.string();\n                    r.pos++;\n                    m.ret[k] = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return FunctionDef;\n    })();\n\n    tensorflow.GradientDef = (function() {\n\n        function GradientDef(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        GradientDef.prototype.functionName = \"\";\n        GradientDef.prototype.gradientFunc = \"\";\n\n        GradientDef.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.tensorflow.GradientDef();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.functionName = r.string();\n                    break;\n                case 2:\n                    m.gradientFunc = r.string();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        return GradientDef;\n    })();\n\n    return tensorflow;\n})();\n\nmodule.exports = $root;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node, ValueType} from '../types';\n\nexport function getParamValue(\n    paramName: string, node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): ValueType {\n  const param = node.params[paramName];\n  if (param && param.inputIndex !== undefined) {\n    if (param.type === 'tensor') {\n      return getTensor(node.inputNames[param.inputIndex], tensorMap, context);\n    }\n    if (param.type === 'tensors') {\n      const inputs = param.inputIndex === 0 ?\n          (param.inputParamLength === 0 ?\n               node.inputNames :\n               node.inputNames.slice(\n                   param.inputIndex, -param.inputParamLength)) :\n          node.inputNames.splice(param.inputIndex);\n\n      return inputs.map(name => getTensor(name, tensorMap, context));\n    }\n    const data = Array.prototype.slice.call(\n        getTensor(\n            node.inputNames.slice(param.inputIndex)[0], tensorMap, context)\n            .dataSync());\n    return param.type === 'number' ? data[0] : data;\n  }\n  return param && param.value;\n}\n\n/**\n * Retrieve the tensor based on input name by extracting the node name and\n * output index information.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensor(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor {\n  const [nodeName, index] = parseNodeName(name);\n  const contextId = context.currentContextIds.find(contextId => {\n    return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n  });\n\n  return contextId !== undefined ?\n      tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n      undefined;\n}\n\n/**\n * Returns the node name and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n */\nexport function getNodeNameAndIndex(\n    inputName: string, context?: ExecutionContext): [string, number] {\n  const [nodeName, index] = parseNodeName(inputName);\n\n  return [\n    getNodeNameWithContextId(nodeName, context && context.currentContextId),\n    index\n  ];\n}\n\nfunction getNodeNameWithContextId(name: string, contextId?: string): string {\n  return !!contextId ? `${name}-${contextId}` : name;\n}\n\nexport function parseNodeName(name: string): [string, number] {\n  const index = name.lastIndexOf(':');\n  if (index === -1) return [name, 0];\n\n  const nodeName = name.substring(0, index);\n  return [nodeName, Number(name.substring(index + 1))];\n}\n\nexport function split(arr: number[], size: number) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += size) {\n    res.push(arr.slice(i, i + size));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Add',\n    'dlOpName': 'add',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'AddN',\n    'dlOpName': 'addN',\n    'category': 'arithmetic',\n    'params': [{\n      'tfInputIndex': 0,\n      'tfInputParamLength': 0,\n      'dlParamName': 'tensors',\n      'type': 'tensors'\n    }]\n  },\n  {\n    'tfOpName': 'BiasAdd',\n    'dlOpName': 'add',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sub',\n    'dlOpName': 'sub',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'RealDiv',\n    'dlOpName': 'div',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Div',\n    'dlOpName': 'div',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FloorDiv',\n    'dlOpName': 'floorDiv',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mul',\n    'dlOpName': 'mul',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Maximum',\n    'dlOpName': 'maximum',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Minimum',\n    'dlOpName': 'minimum',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Pow',\n    'dlOpName': 'pow',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SquaredDifference',\n    'dlOpName': 'squaredDifference',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mod',\n    'dlOpName': 'mod',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FloorMod',\n    'dlOpName': 'mod',\n    'category': 'arithmetic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Abs',\n    'dlOpName': 'abs',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Acos',\n    'dlOpName': 'acos',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Asin',\n    'dlOpName': 'asin',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'atan',\n    'dlOpName': 'atan',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Ceil',\n    'dlOpName': 'ceil',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ClipByValue',\n    'dlOpName': 'clipByValue',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'clip_value_min',\n        'dlParamName': 'clipValueMin',\n        'type': 'number'\n      },\n      {\n        'tfParamName': 'clip_value_max',\n        'dlParamName': 'clipValueMax',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cos',\n    'dlOpName': 'cos',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cosh',\n    'dlOpName': 'cosh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Elu',\n    'dlOpName': 'elu',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Exp',\n    'dlOpName': 'exp',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Floor',\n    'dlOpName': 'floor',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Log',\n    'dlOpName': 'log',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Neg',\n    'dlOpName': 'neg',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Relu',\n    'dlOpName': 'relu',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Relu6',\n    'dlOpName': 'clipByValue',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'dlParamName': 'clipValueMin', 'type': 'number', 'defaultValue': 0},\n      {'dlParamName': 'clipValueMax', 'type': 'number', 'defaultValue': 6}\n    ]\n  },\n  {\n    'tfOpName': 'Selu',\n    'dlOpName': 'selu',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sigmoid',\n    'dlOpName': 'sigmoid',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sin',\n    'dlOpName': 'sin',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sinh',\n    'dlOpName': 'sinh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sqrt',\n    'dlOpName': 'sqrt',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Rsqrt',\n    'dlOpName': 'rsqrt',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Square',\n    'dlOpName': 'square',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tan',\n    'dlOpName': 'tan',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tanh',\n    'dlOpName': 'tanh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sign',\n    'dlOpName': 'sign',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Round',\n    'dlOpName': 'round',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Expm1',\n    'dlOpName': 'expm1',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Log1p',\n    'dlOpName': 'log1p',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'dlOpName': 'reciprocal',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'dlOpName': 'reciprocal',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softplus',\n    'dlOpName': 'softplus',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Asinh',\n    'dlOpName': 'asinh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Acosh',\n    'dlOpName': 'acosh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Atanh',\n    'dlOpName': 'atanh',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Erf',\n    'dlOpName': 'erf',\n    'category': 'basic_math',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'LoopCond',\n    'dlOpName': 'loopCond',\n    'category': 'control',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'pred', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Switch',\n    'dlOpName': 'switch',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'data', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'pred', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'dlOpName': 'merge',\n    'category': 'control',\n    'params': [{\n      'tfInputIndex': 0,\n      'tfInputParamLength': 0,\n      'dlParamName': 'tensors',\n      'type': 'tensors'\n    }]\n  },\n  {\n    'tfOpName': 'Enter',\n    'dlOpName': 'enter',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensor', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'frame_name',\n        'dlParamName': 'frameName',\n        'type': 'string'\n      },\n      {\n        'tfParamName': 'is_constant',\n        'dlParamName': 'isConstant',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'dlOpName': 'exit',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensor', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'dlOpName': 'nextIteration',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensor', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'dlOpName': 'tensorArray',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'size', 'type': 'number'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'element_shape',\n        'dlParamName': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfParamName': 'dynamic_size',\n        'dlParamName': 'dynamicSize',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'clear_after_read',\n        'dlParamName': 'clearAfterRead',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'identical_element_shapes',\n        'dlParamName': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'tensor_array_name',\n        'dlParamName': 'name',\n        'type': 'string'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'dlOpName': 'tensorArrayWrite',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'index', 'type': 'number'},\n      {'tfInputIndex': 2, 'dlParamName': 'tensor', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'flowIn', 'type': 'number'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'dlOpName': 'tensorArrayRead',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'index', 'type': 'number'},\n      {'tfInputIndex': 2, 'dlParamName': 'flowIn', 'type': 'number'}, {\n        'tfParamName': 'dtype',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'dlOpName': 'tensorArrayGather',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'element_shape',\n        'dlParamName': 'elementShape',\n        'type': 'shape'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'dlOpName': 'tensorArrayScatter',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'tensor', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'dlOpName': 'tensorArrayConcat',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'element_shape_except0',\n        'dlParamName': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'dlOpName': 'tensorArraySplit',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'tensor', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'lengths', 'type': 'number[]'},\n      {'tfInputIndex': 3, 'dlParamName': 'flowIn', 'type': 'number'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'dlOpName': 'tensorArraySize',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'flowIn', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'dlOpName': 'tensorArrayClose',\n    'category': 'control',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'tensorArrayId', 'type': 'number'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'AvgPool',\n    'dlOpName': 'avgPool',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfParamName': 'ksize', 'dlParamName': 'kernelSize', 'type': 'number[]'},\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool',\n    'dlOpName': 'maxPool',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfParamName': 'ksize', 'dlParamName': 'kernelSize', 'type': 'number[]'},\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv1D',\n    'dlOpName': 'conv1d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfParamName': 'stride', 'dlParamName': 'stride', 'type': 'number'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NWC'\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'dilation',\n        'dlParamName': 'dilation',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2D',\n    'dlOpName': 'conv2d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'useCudnnOnGpu',\n        'dlParamName': 'useCudnnOnGpu',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfParamName': 'dilations',\n        'dlParamName': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2DBackpropInput',\n    'dlOpName': 'conv2dTranspose',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 2, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfInputIndex': 0, 'dlParamName': 'outputShape', 'type': 'number[]'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2d',\n    'dlOpName': 'depthwiseConv2d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'input', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfParamName': 'dilations',\n        'dlParamName': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2dNative',\n    'dlOpName': 'depthwiseConv2d',\n    'category': 'convolution',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'input', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'filter', 'type': 'tensor'},\n      {'tfParamName': 'strides', 'dlParamName': 'strides', 'type': 'number[]'},\n      {'tfParamName': 'padding', 'dlParamName': 'pad', 'type': 'string'}, {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfParamName': 'dilations',\n        'dlParamName': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Fill',\n    'dlOpName': 'fill',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'},\n      {'tfInputIndex': 1, 'dlParamName': 'value', 'type': 'number'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'LinSpace',\n    'dlOpName': 'linspace',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'start', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'stop', 'type': 'number'},\n      {'tfInputIndex': 2, 'dlParamName': 'num', 'type': 'number'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'OneHot',\n    'dlOpName': 'oneHot',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'indices', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'depth', 'type': 'number'}, {\n        'tfInputIndex': 2,\n        'dlParamName': 'onValue',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {\n        'tfInputIndex': 3,\n        'dlParamName': 'offValue',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Ones',\n    'dlOpName': 'ones',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'OnesLike',\n    'dlOpName': 'onesLike',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'RandomUniform',\n    'dlOpName': 'randomUniform',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'}, {\n        'tfParamName': 'minval',\n        'dlParamName': 'minval',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'maxval',\n        'dlParamName': 'maxval',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'seed',\n        'dlParamName': 'seed',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'seed2',\n        'dlParamName': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'T',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Range',\n    'dlOpName': 'range',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'start', 'type': 'number'},\n      {'tfInputIndex': 1, 'dlParamName': 'stop', 'type': 'number'}, {\n        'tfInputIndex': 2,\n        'dlParamName': 'step',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {'tfParamName': 'Tidx', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'truncatedNormal',\n    'dlOpName': 'truncatedNormal',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'}, {\n        'tfParamName': 'means',\n        'dlParamName': 'mean',\n        'type': 'number',\n        'defaultValue': 0.0\n      },\n      {\n        'tfParamName': 'stddev',\n        'dlParamName': 'stdDev',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {'tfParamName': 'seed', 'dlParamName': 'seed', 'type': 'number'}, {\n        'tfParamName': 'seed2',\n        'dlParamName': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'T',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Zeros',\n    'dlOpName': 'zeros',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'shape', 'type': 'number[]'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'ZerosLike',\n    'dlOpName': 'zerosLike',\n    'category': 'creation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'T', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'NonMaxSuppressionV2',\n    'dlOpName': 'nonMaxSuppression',\n    'category': 'dynamic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'boxes', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scores', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'maxOutputSize', 'type': 'number'},\n      {'tfInputIndex': 3, 'dlParamName': 'iouThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV3',\n    'dlOpName': 'nonMaxSuppression',\n    'category': 'dynamic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'boxes', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scores', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'maxOutputSize', 'type': 'number'},\n      {'tfInputIndex': 3, 'dlParamName': 'iouThreshold', 'type': 'number'},\n      {'tfInputIndex': 4, 'dlParamName': 'scoreThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Where',\n    'dlOpName': 'whereAsync',\n    'category': 'dynamic',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'condition', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [{\n  'tfOpName': 'TopKV2',\n  'dlOpName': 'topK',\n  'category': 'evaluation',\n  'params': [\n    {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n    {'tfInputIndex': 1, 'dlParamName': 'k', 'type': 'number'},\n    {'tfParamName': 'sorted', 'dlParamName': 'sorted', 'type': 'bool'}\n  ]\n}];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'PlaceholderWithDefault',\n    'dlOpName': 'placeholder',\n    'category': 'graph',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'default', 'type': 'tensor'},\n      {'tfParamName': 'shape', 'dlParamName': 'shape', 'type': 'shape'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'Placeholder',\n    'dlOpName': 'placeholder',\n    'category': 'graph',\n    'params': [\n      {'tfParamName': 'shape', 'dlParamName': 'shape', 'type': 'shape'},\n      {'tfParamName': 'dtype', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {'tfOpName': 'Const', 'dlOpName': 'const', 'category': 'graph'}, {\n    'tfOpName': 'Identity',\n    'dlOpName': 'identity',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Snapshot',\n    'dlOpName': 'snapshot',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Rank',\n    'dlOpName': 'rank',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Size',\n    'dlOpName': 'size',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Shape',\n    'dlOpName': 'shape',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'ShapeN',\n    'dlOpName': 'shapeN',\n    'category': 'graph',\n    'params': [{\n      'tfInputIndex': 0,\n      'tfInputParamLength': 0,\n      'dlParamName': 'x',\n      'type': 'tensors'\n    }]\n  },\n  {\n    'tfOpName': 'Print',\n    'dlOpName': 'print',\n    'category': 'graph',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfInputIndex': 1,\n        'tfInputParamLength': 1,\n        'dlParamName': 'data',\n        'type': 'tensors'\n      },\n      {'tfParamName': 'message', 'dlParamName': 'message', 'type': 'string'}, {\n        'tfParamName': 'first_n',\n        'dlParamName': 'firstN',\n        'type': 'number',\n        'notSupprted': true\n      },\n      {\n        'tfParamName': 'summarize',\n        'dlParamName': 'summarize',\n        'type': 'number',\n        'defaultValue': 3\n      }\n    ]\n  },\n  {'tfOpName': 'NoOp', 'dlOpName': 'noop', 'category': 'graph', 'params': []}, {\n    'tfOpName': 'StopGradient',\n    'dlOpName': 'stopGradient',\n    'category': 'graph',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'FakeQuantWithMinMaxVars',\n    'dlOpName': 'fakeQuantWithMinMaxVars',\n    'category': 'graph',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfParamName': 'min', 'dlParamName': 'min', 'type': 'number'},\n      {'tfParamName': 'max', 'dlParamName': 'max', 'type': 'number'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'dlOpName': 'resizeBilinear',\n    'category': 'image',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'images', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'size', 'type': 'number[]'}, {\n        'tfParamName': 'align_corners',\n        'dlParamName': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'dlOpName': 'resizeNearestNeighbor',\n    'category': 'image',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'images', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'size', 'type': 'number[]'}, {\n        'tfParamName': 'align_corners',\n        'dlParamName': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'dlOpName': 'cropAndResize',\n    'category': 'image',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'image', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'boxes', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'boxInd', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'cropSize', 'type': 'number[]'},\n      {'tfParamName': 'method', 'dlParamName': 'method', 'type': 'string'}, {\n        'tfParamName': 'extrapolation_value',\n        'dlParamName': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Equal',\n    'dlOpName': 'equal',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NotEqual',\n    'dlOpName': 'notEqual',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Greater',\n    'dlOpName': 'greater',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'GreaterEqual',\n    'dlOpName': 'greaterEqual',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Less',\n    'dlOpName': 'less',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LessEqual',\n    'dlOpName': 'lessEqual',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalAnd',\n    'dlOpName': 'logicalAnd',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalNot',\n    'dlOpName': 'logicalNot',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalOr',\n    'dlOpName': 'logicalOr',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Select',\n    'dlOpName': 'where',\n    'category': 'logical',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'condition', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'MatMul',\n    'dlOpName': 'matMul',\n    'category': 'matrices',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'transpose_a',\n        'dlParamName': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'transpose_b',\n        'dlParamName': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMul',\n    'dlOpName': 'matMul',\n    'category': 'matrices',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'a', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'b', 'type': 'tensor'}, {\n        'tfParamName': 'adj_x',\n        'dlParamName': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'adj_y',\n        'dlParamName': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Transpose',\n    'dlOpName': 'transpose',\n    'category': 'matrices',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'perm', 'type': 'number[]'}, {\n        'tfParamName': 'T',\n        'dlParamName': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'FusedBatchNorm',\n    'dlOpName': 'batchNormalization',\n    'category': 'normalization',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scale', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'offset', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'mean', 'type': 'tensor'},\n      {'tfInputIndex': 4, 'dlParamName': 'variance', 'type': 'tensor'}, {\n        'tfParamName': 'epsilon',\n        'dlParamName': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV2',\n    'dlOpName': 'batchNormalization',\n    'category': 'normalization',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'scale', 'type': 'tensor'},\n      {'tfInputIndex': 2, 'dlParamName': 'offset', 'type': 'tensor'},\n      {'tfInputIndex': 3, 'dlParamName': 'mean', 'type': 'tensor'},\n      {'tfInputIndex': 4, 'dlParamName': 'variance', 'type': 'tensor'}, {\n        'tfParamName': 'epsilon',\n        'dlParamName': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfParamName': 'data_format',\n        'dlParamName': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LRN',\n    'dlOpName': 'localResponseNormalization',\n    'category': 'normalization',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'depth_radius',\n        'dlParamName': 'radius',\n        'type': 'number',\n        'defaultValue': 5\n      },\n      {\n        'tfParamName': 'bias',\n        'dlParamName': 'bias',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {\n        'tfParamName': 'alpha',\n        'dlParamName': 'alpha',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {\n        'tfParamName': 'beta',\n        'dlParamName': 'beta',\n        'type': 'number',\n        'defaultValue': 0.5\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softmax',\n    'dlOpName': 'softmax',\n    'category': 'normalization',\n    'params': [{'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Max',\n    'dlOpName': 'max',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Mean',\n    'dlOpName': 'mean',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Min',\n    'dlOpName': 'min',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Sum',\n    'dlOpName': 'sum',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'All',\n    'dlOpName': 'all',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Any',\n    'dlOpName': 'any',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number[]'},\n      {'tfParamName': 'keep_dims', 'dlParamName': 'keepDims', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'ArgMax',\n    'dlOpName': 'argMax',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'ArgMin',\n    'dlOpName': 'argMin',\n    'category': 'reduction',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'ConcatV2',\n    'dlOpName': 'concat',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'tfInputParamLength': 1,\n        'dlParamName': 'tensors',\n        'type': 'tensors'\n      },\n      {'tfInputIndex': -1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Concat',\n    'dlOpName': 'concat',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 1,\n        'tfInputParamLength': 1,\n        'dlParamName': 'tensors',\n        'type': 'tensors'\n      },\n      {'tfInputIndex': 0, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'GatherV2',\n    'dlOpName': 'gather',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'tensor'}, {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Gather',\n    'dlOpName': 'gather',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'indices', 'type': 'tensor'}, {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'validate_indices',\n        'dlParamName': 'validateIndices',\n        'type': 'bool',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reverse',\n    'dlOpName': 'reverse',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'ReverseV2',\n    'dlOpName': 'reverse',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Slice',\n    'dlOpName': 'slice',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'begin', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'size', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'StridedSlice',\n    'dlOpName': 'stridedSlice',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'begin', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'end', 'type': 'number[]'},\n      {'tfInputIndex': 3, 'dlParamName': 'strides', 'type': 'number[]'}, {\n        'tfParamName': 'begin_mask',\n        'dlParamName': 'beginMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'end_mask',\n        'dlParamName': 'endMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'new_axis_mask',\n        'dlParamName': 'newAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'ellipsis_mask',\n        'dlParamName': 'ellipsisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'shrink_axis_mask',\n        'dlParamName': 'shrinkAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pack',\n    'dlOpName': 'stack',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'tfInputParamLength': 0,\n        'dlParamName': 'tensors',\n        'type': 'tensors'\n      },\n      {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Unpack',\n    'dlOpName': 'unstack',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'tfInputParamLength': 0,\n        'dlParamName': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'tfParamName': 'axis',\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfParamName': 'num',\n        'dlParamName': 'num',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tile',\n    'dlOpName': 'tile',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'reps', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Split',\n    'dlOpName': 'split',\n    'category': 'slice_join',\n    'params': [\n      {\n        'tfInputIndex': 0,\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {'tfInputIndex': 1, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'num_split',\n        'dlParamName': 'numOrSizeSplits',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SplitV',\n    'dlOpName': 'split',\n    'category': 'slice_join',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'numOrSizeSplits', 'type': 'number[]'},\n      {\n        'tfInputIndex': 2,\n        'dlParamName': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json = [\n  {\n    'tfOpName': 'Cast',\n    'dlOpName': 'cast',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'SrcT',\n        'dlParamName': 'sdtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'tfParamName': 'DstT', 'dlParamName': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'ExpandDims',\n    'dlOpName': 'expandDims',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfInputIndex': 1,\n        'tfParamNameDeprecated': 'dim',\n        'dlParamName': 'axis',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pad',\n    'dlOpName': 'pad',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'padding', 'type': 'number[]'}, {\n        'tfParamName': 'constant_value',\n        'dlParamName': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'PadV2',\n    'dlOpName': 'pad',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'padding', 'type': 'number[]'}, {\n        'tfInputIndex': 2,\n        'dlParamName': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reshape',\n    'dlOpName': 'reshape',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Squeeze',\n    'dlOpName': 'squeeze',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'}, {\n        'tfParamName': 'axis',\n        'tfParamNameDeprecated': 'squeeze_dims',\n        'dlParamName': 'axis',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SpaceToBatchND',\n    'dlOpName': 'spaceToBatchND',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'blockShape', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'paddings', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'BatchToSpaceND',\n    'dlOpName': 'batchToSpaceND',\n    'category': 'transformation',\n    'params': [\n      {'tfInputIndex': 0, 'dlParamName': 'x', 'type': 'tensor'},\n      {'tfInputIndex': 1, 'dlParamName': 'blockShape', 'type': 'number[]'},\n      {'tfInputIndex': 2, 'dlParamName': 'crops', 'type': 'number[]'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {DataType} from '@tensorflow/tfjs-core';\n\nimport {tensorflow} from '../data/compiled_api';\n\nimport {getNodeNameAndIndex} from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as transformation from './op_list/transformation';\nimport {Graph, Node, OpMapper, ParamValue} from './types';\n\nconst CONTROL_FLOW_OPS = ['Switch', 'Merge', 'Enter', 'Exit', 'NextIteration'];\nconst DYNAMIC_SHAPE_OPS =\n    ['NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'Where'];\n\nexport class OperationMapper {\n  private static _instance: OperationMapper;\n\n  private opMappers: {[key: string]: OpMapper};\n\n  // Singleton instance for the mapper\n  public static get Instance() {\n    return this._instance || (this._instance = new this());\n  }\n\n  // Loads the op mapping from the JSON file.\n  private constructor() {\n    const ops = [\n      arithmetic, basicMath, control, convolution, creation, dynamic,\n      evaluation, logical, image, graph, matrices, normalization, reduction,\n      sliceJoin, transformation\n    ];\n    const mappersJson: OpMapper[] = [].concat.apply([], ops.map(op => op.json));\n\n    this.opMappers = mappersJson.reduce<{[key: string]: OpMapper}>(\n        (map, mapper: OpMapper) => {\n          map[mapper.tfOpName] = mapper;\n          return map;\n        },\n        {});\n  }\n\n  private isControlFlow(node: tensorflow.INodeDef) {\n    return CONTROL_FLOW_OPS.some(op => op === node.op);\n  }\n\n  private isDynamicShape(node: tensorflow.INodeDef) {\n    return DYNAMIC_SHAPE_OPS.some(op => op === node.op);\n  }\n  // Converts the model from Tensorflow GraphDef to local representation for\n  // deeplearn.js API\n  transformGraph(graph: tensorflow.IGraphDef): Graph {\n    const tfNodes = graph.node;\n    let withControlFlow = false;\n    let withDynamicShape = false;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    const nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n      map[node.name] = this.mapNode(node);\n      if (this.isControlFlow(node)) withControlFlow = true;\n      if (this.isDynamicShape(node)) withDynamicShape = true;\n      if (node.op === 'Placeholder') placeholders.push(map[node.name]);\n      if (node.op === 'Const') weights.push(map[node.name]);\n      return map;\n    }, {});\n\n    const inputs: Node[] = [];\n    const outputs: Node[] = [];\n    Object.keys(nodes).forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        node.inputs.push(nodes[nodeName]);\n        nodes[nodeName].children.push(node);\n      });\n      if (node.inputs.length === 0) inputs.push(node);\n    });\n\n    Object.keys(nodes).forEach(key => {\n      const node = nodes[key];\n      if (node.children.length === 0) outputs.push(node);\n    });\n\n    return {\n      nodes,\n      inputs,\n      outputs,\n      weights,\n      placeholders,\n      withControlFlow,\n      withDynamicShape\n    };\n  }\n\n  private mapNode(node: tensorflow.INodeDef): Node {\n    const mapper = this.opMappers[node.op];\n    if (mapper === undefined) {\n      throw new Error('Tensorflow Op is not supported: ' + node.op);\n    }\n    const newNode: Node = {\n      name: node.name,\n      op: mapper.dlOpName,\n      category: mapper.category,\n      inputNames:\n          (node.input ||\n           []).map(input => input.startsWith('^') ? input.substr(1) : input),\n      inputs: [],\n      children: [],\n      params: {}\n    };\n\n    if (!!mapper.params) {\n      newNode.params = mapper.params.reduce<{[key: string]:\n                                                 ParamValue}>((map, param) => {\n        const inputIndex = param.tfInputIndex;\n        const inputParamLength = param.tfInputParamLength;\n        const type = param.type;\n        let value = undefined;\n        if (inputIndex === undefined) {\n          switch (param.type) {\n            case 'string':\n              value = this.getStringParam(\n                  node.attr, param.tfParamName, param.defaultValue as string);\n\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getStringParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as string);\n              }\n              break;\n            case 'number':\n              value = this.getNumberParam(\n                  node.attr, param.tfParamName, param.defaultValue as number);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getNumberParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as number);\n              }\n              break;\n            case 'number[]':\n              value = this.getNumericArrayParam(\n                  node.attr, param.tfParamName, param.defaultValue as number[]);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getNumericArrayParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as number[]);\n              }\n              break;\n            case 'bool':\n              value = this.getBoolParam(\n                  node.attr, param.tfParamName, param.defaultValue as boolean);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getBoolParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as boolean);\n              }\n              break;\n            case 'shape':\n              value = this.getTensorShapeParam(\n                  node.attr, param.tfParamName, param.defaultValue as number[]);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getTensorShapeParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as number[]);\n              }\n              break;\n            case 'dtype':\n              value = this.getDtypeParam(\n                  node.attr, param.tfParamName, param.defaultValue as DataType);\n              if (value === undefined && !!param.tfParamNameDeprecated) {\n                value = this.getDtypeParam(\n                    node.attr, param.tfParamNameDeprecated,\n                    param.defaultValue as DataType);\n              }\n              break;\n            case 'tensor':\n            case 'tensors':\n              break;\n            default:\n              throw new Error(\n                  `Unsupported param type: ${param.type} for op: ${node.op}`);\n          }\n        }\n        map[param.dlParamName] = {value, inputIndex, type, inputParamLength};\n        return map;\n      }, {});\n    }\n    return newNode;\n  }\n\n  private getStringParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string,\n      keepCase = false): string {\n    const param = attrs[name];\n    if (param !== undefined) {\n      const value = String.fromCharCode.apply(null, param.s);\n      return keepCase ? value : value.toLowerCase();\n    }\n    return def;\n  }\n\n  private getBoolParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: boolean): boolean {\n    const param = attrs[name];\n    return param ? param.b : def;\n  }\n\n  private getNumberParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: number): number {\n    const param = attrs[name] as tensorflow.AttrValue;\n    const value = (param ? param[param.value] : def) as number | Long;\n    return (typeof value === 'number') ? value : value['toInt']() as number;\n  }\n  private getDtypeParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: DataType): DataType {\n    const param = attrs[name];\n    if (param && param.type) {\n      switch (param.type) {\n        case tensorflow.DataType.DT_FLOAT:\n          return 'float32';\n        case tensorflow.DataType.DT_INT32:\n          return 'int32';\n        case tensorflow.DataType.DT_BOOL:\n          return 'bool';\n        default:\n          return def;\n      }\n    }\n    return def;\n  }\n  private getTensorShapeParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def?: number[]): number[]|undefined {\n    const param = attrs[name];\n    if (param && param.shape) {\n      return param.shape.dim.map(\n          dim =>\n              (typeof dim.size === 'number') ? dim.size : dim.size['toInt']());\n    }\n    return def;\n  }\n\n  private getNumericArrayParam(\n      attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n      def: number[]): number[] {\n    const param = attrs[name];\n    if (param) {\n      return ((param.list.f && param.list.f.length ? param.list.f :\n                                                     param.list.i))\n                 .map(v => (typeof v === 'number') ? v : v['toInt']()) as\n          number[];\n    }\n    return def;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'add': {\n      return [tfc.add(\n          (getParamValue('a', node, tensorMap, context) as tfc.Tensor),\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'addN': {\n      return [tfc.addN((\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[]))];\n    }\n    case 'mod':\n      return [tfc.mod(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'mul':\n      return [tfc.mul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'div': {\n      return [tfc.div(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'floorDiv': {\n      return [tfc.floorDiv(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'sub': {\n      return [tfc.sub(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'minimum': {\n      return [tfc.minimum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'maximum': {\n      return [tfc.maximum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'pow': {\n      return [tfc.pow(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'squaredDifference': {\n      return [tfc.squaredDifference(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'arithmetic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'abs':\n      return [tfc.abs(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'acos':\n      return [tfc.acos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'acosh':\n      return [tfc.acosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'asin':\n      return [tfc.asin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'asinh':\n      return [tfc.asinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'atan':\n      return [tfc.atan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'atanh':\n      return [tfc.atanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'ceil':\n      return [tfc.ceil(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'cos':\n      return [tfc.cos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'cosh':\n      return [tfc.cosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'elu':\n      return [tfc.elu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'erf':\n      return [tfc.erf(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'exp':\n      return [tfc.exp(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'expm1': {\n      return [tfc.expm1(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'floor':\n      return [tfc.floor(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'log':\n      return [tfc.log(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'log1p': {\n      return [tfc.log1p(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'neg':\n      return [tfc.neg(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'reciprocal': {\n      return [tfc.reciprocal(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'relu':\n      return [tfc.relu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'round': {\n      return [tfc.round(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'selu':\n      return [tfc.selu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'sigmoid':\n      return [tfc.sigmoid(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'sin':\n      return [tfc.sin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'sign': {\n      return [tfc.sign(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'sinh': {\n      return [tfc.sinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'softplus': {\n      return [tfc.softplus(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'sqrt': {\n      return [tfc.sqrt(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'square': {\n      return [tfc.square(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'tanh': {\n      return [tfc.tanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'tan':\n      return [tfc.tan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'clipByValue':\n      return [tfc.clipByValue(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('clipValueMin', node, tensorMap, context) as number,\n          getParamValue('clipValueMax', node, tensorMap, context) as number)];\n    case 'rsqrt':\n      return [tfc.div(\n          tfc.scalar(1.0, 'float32'),\n          tfc.sqrt(getTensor(node.inputNames[0], tensorMap, context)))];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'basic_math';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:max-line-length\nimport {concat, DataType, slice, stack, Tensor, tensor, tidy, unstack, util} from '@tensorflow/tfjs-core';\n\nexport interface TensorWithState {\n  tensor?: Tensor;\n  written?: boolean;\n  read?: boolean;\n  cleared?: boolean;\n}\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n  private static nextId = 0;\n  private tensors: TensorWithState[] = [];\n  private closed_ = false;\n  readonly id: number;\n  constructor(\n      public readonly name: string, public readonly dtype: DataType,\n      private maxSize: number, private elementShape: number[],\n      public readonly identicalElementShapes: boolean,\n      public readonly dynamicSize: boolean,\n      public readonly clearAfterRead: boolean) {\n    this.id = TensorArray.nextId++;\n  }\n\n  get closed() {\n    return this.closed_;\n  }\n\n  /**\n   * Close the current TensorArray.\n   */\n  clearAndClose() {\n    this.tensors.forEach(tensor => tensor.tensor.dispose());\n    this.tensors = [];\n    this.closed_ = true;\n  }\n\n  size(): number {\n    return this.tensors.length;\n  }\n\n  /**\n   * Read the value at location index in the TensorArray.\n   * @param index Number the index to read from.\n   */\n  read(index: number): Tensor {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || index >= this.tensors.length) {\n      throw new Error(`Tried to read from index ${index}, but array size is: ${\n          this.tensors.length}`);\n    }\n\n    const tensorWithState = this.tensors[index];\n    if (tensorWithState.cleared) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not read index ${\n              index} twice because it was cleared after a previous read ` +\n          `(perhaps try setting clear_after_read = false?).`);\n    }\n\n    if (this.clearAfterRead) {\n      tensorWithState.cleared = true;\n    }\n\n    tensorWithState.read = true;\n    return tensorWithState.tensor;\n  }\n\n  /**\n   * Helper method to read multiple tensors from the specified indices.\n   */\n  readMany(indices: number[]): Tensor[] {\n    return indices.map(index => this.read(index));\n  }\n\n  /**\n   * Write value into the index of the TensorArray.\n   * @param index number the index to write to.\n   * @param tensor\n   */\n  write(index: number, tensor: Tensor) {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n      throw new Error(`Tried to write to index ${\n          index}, but array is not resizeable and size is: ${this.maxSize}`);\n    }\n\n    const t = this.tensors[index] || {};\n\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray ${\n          this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${\n          tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n    }\n\n    // Set the shape for the first time write to unknow shape tensor array\n    if (this.size() === 0 && this.elementShape.length === 0) {\n      this.elementShape = tensor.shape;\n    }\n\n    this.assertShapesMatch(\n        this.elementShape, tensor.shape,\n        `TensorArray ${this.name}: Could not write to TensorArray index ${\n            index}.`);\n\n    if (t && t.read) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been read.`);\n    }\n\n    if (t && t.written) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been written.`);\n    }\n\n    t.tensor = tensor;\n    t.written = true;\n\n    this.tensors[index] = t;\n  }\n\n  /**\n   * Helper method to write multiple tensors to the specified indices.\n   */\n  writeMany(indices: number[], tensors: Tensor[]) {\n    if (indices.length !== tensors.length) {\n      throw new Error(\n          `TensorArray ${this.name}: could not write multiple tensors,` +\n          `because the index size: ${\n              indices.length} is not the same as tensors size: ${\n              tensors.length}.`);\n    }\n\n    indices.forEach((i, index) => this.write(i, tensors[index]));\n  }\n\n  /**\n   * Return selected values in the TensorArray as a packed Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size(). If not specified returns\n   *    all tensors in the original order.\n   * @param [dtype]\n   */\n  gather(indices?: number[], dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but gather requested dtype ${dtype}`);\n    }\n\n    if (!indices) {\n      indices = [];\n      for (let i = 0; i < this.size(); i++) {\n        indices.push(i);\n      }\n    }\n\n    if (indices.length === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    // Read all the PersistentTensors into a vector to keep track of\n    // their memory.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatch(\n        this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n\n    return stack(tensors, 0);\n  }\n\n  /**\n   * Return the values in the TensorArray as a concatenated Tensor.\n   */\n  concat(dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but concat requested dtype ${dtype}`);\n    }\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    const indices = [];\n    for (let i = 0; i < this.size(); i++) {\n      indices.push(i);\n    }\n    // Collect all the tensors from the tensors array.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatch(\n        this.elementShape, tensors[0].shape,\n        `TensorArray shape mismatch: tensor array shape (${\n            this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n\n    return concat(tensors, 0);\n  }\n\n  /**\n   * Scatter the values of a Tensor in specific indices of a TensorArray.\n   * @param indices nummber[] values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size().\n   * @param tensor Tensor input tensor.\n   */\n  scatter(indices: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n\n    if (indices.length !== tensor.shape[0]) {\n      throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n          indices.length} vs. ${tensor.shape[0]}`);\n    }\n\n    const maxIndex = Math.max(...indices);\n\n    if (!this.dynamicSize && maxIndex >= this.maxSize) {\n      throw new Error(\n          `Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n    }\n\n    this.writeMany(indices, unstack(tensor, 0));\n  }\n\n  /**\n   * Split the values of a Tensor into the TensorArray.\n   * @param length number[] with the lengths to use when splitting value along\n   *    its first dimension.\n   * @param tensor Tensor, the tensor to split.\n   */\n  split(length: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n      totalLength += len;\n      return totalLength;\n    });\n\n    if (totalLength !== tensor.shape[0]) {\n      throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n\n    if (!this.dynamicSize && length.length !== this.maxSize) {\n      throw new Error(\n          `TensorArray's size is not equal to the size of lengths (${\n              this.maxSize} vs. ${length.length}), ` +\n          'and the TensorArray is not marked as dynamically resizeable');\n    }\n\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors: Tensor[] = [];\n    tidy(() => {\n      tensor = tensor.reshape([1, totalLength, elementPerRow]);\n      for (let i = 0; i < length.length; ++i) {\n        const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n        const indices = [0, previousLength, 0];\n        const sizes = [1, length[i], elementPerRow];\n        tensors[i] = slice(tensor, indices, sizes).reshape(this.elementShape);\n      }\n      return tensors;\n    });\n    const indices = [];\n    for (let i = 0; i < length.length; i++) {\n      indices[i] = i;\n    }\n    this.writeMany(indices, tensors);\n  }\n\n  private assertShapesMatch(\n      shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n    util.assert(\n        this.arraysEqual(shapeA, shapeB),\n        errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  }\n\n  private arraysEqual(n1: number[], n2: number[]) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {scalar} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {TensorArray} from '../../executor/tensor_array';\nimport {Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'loopCond':\n      return [getParamValue('pred', node, tensorMap, context) as tfc.Tensor];\n    case 'switch': {\n      const pred =\n          getParamValue('pred', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor;\n      // Outputs nodes :0 => false, :1 => true\n      return (await pred.data())[0] ? [undefined, data] : [data, undefined];\n    }\n    case 'merge':\n      const inputName = node.inputNames.find(\n          name => getTensor(name, tensorMap, context) !== undefined);\n      return inputName ? [getTensor(inputName, tensorMap, context)] : undefined;\n\n    case 'enter':\n      const frameId =\n          getParamValue('frameName', node, tensorMap, context) as string;\n      const data =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.enterFrame(frameId);\n      return [data];\n\n    case 'exit':\n      const tensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.exitFrame();\n      return [tensor];\n\n    case 'nextIteration':\n      const input =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.nextIteration();\n      return [input];\n\n    case 'tensorArray':\n      const size = getParamValue('size', node, tensorMap, context) as number;\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const dynamicSize =\n          getParamValue('dynamicSize', node, tensorMap, context) as boolean;\n      const clearAfterRead =\n          getParamValue('clearAfterRead', node, tensorMap, context) as boolean;\n      const identicalElementShapes =\n          getParamValue('identicalElementShapes', node, tensorMap, context) as\n          boolean;\n      const name = getParamValue('name', node, tensorMap, context) as string;\n      const tensorArray = new TensorArray(\n          name, dtype, size, elementShape, identicalElementShapes, dynamicSize,\n          clearAfterRead);\n      context.addTensorArray(tensorArray);\n      return [scalar(tensorArray.id), scalar(1.0)];\n\n    case 'tensorArrayWrite':\n      const id =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const writeTensorArray = context.getTensorArray(id);\n      writeTensorArray.write(index, writeTensor);\n      return [scalar(1.0)];\n\n    case 'tensorArrayRead':\n      const readId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const readTensorArray = context.getTensorArray(readId);\n      return [readTensorArray.read(readIndex)];\n\n    case 'tensorArrayGather':\n      const gatherId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const gatherDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const gatherTensorArray = context.getTensorArray(gatherId);\n      return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n\n    case 'tensorArrayScatter':\n      const scatterId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const scatterTensorArray = context.getTensorArray(scatterId);\n      scatterTensorArray.scatter(scatterIndices, scatterTensor);\n      return [scalar(1.0)];\n\n    case 'tensorArrayConcat':\n      const concatId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const concatTensorArray = context.getTensorArray(concatId);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      return [concatTensorArray.concat(concatDtype)];\n\n    case 'tensorArraySplit':\n      const splitId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n      const splitTensorArray = context.getTensorArray(splitId);\n      splitTensorArray.split(lengths, splitTensor);\n      return [scalar(1.0)];\n\n    case 'tensorArraySize':\n      const sizeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const sizeTensorArray = context.getTensorArray(sizeId);\n      return [scalar(sizeTensorArray.size(), 'int32')];\n\n    case 'tensorArrayClose':\n      const closeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const closeTensorArray = context.getTensorArray(closeId);\n      closeTensorArray.clearAndClose();\n      return [];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'control';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'conv1d': {\n          const stride =\n              getParamValue('stride', node, tensorMap, context) as number;\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilation =\n              getParamValue('dilation', node, tensorMap, context) as number;\n          return [tfc.conv1d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor3D,\n              stride, pad as 'valid' | 'same', dataFormat as 'NWC' | 'NCW',\n              dilation)];\n        }\n        case 'conv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [tfc.conv2d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[0], dilations[1]])];\n        }\n        case 'conv2dTranspose': {\n          const shape = getParamValue(\n                            'outputShape', node, tensorMap,\n                            context) as [number, number, number] |\n              [number, number, number, number];\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          return [tfc.conv2dTranspose(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              shape, [stride[1], stride[2]], pad as 'valid' | 'same')];\n        }\n        case 'depthwiseConv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n\n          return [tfc.depthwiseConv2d(\n              getParamValue('input', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[0], dilations[1]])];\n        }\n\n        case 'avgPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.avgPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n\n        case 'maxPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.maxPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'convolution';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'fill': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const value = getParamValue('value', node, tensorMap, context) as number;\n      return [tfc.fill(shape, value, dtype)];\n    }\n    case 'linspace': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const num = getParamValue('num', node, tensorMap, context) as number;\n      return [tfc.linspace(start, stop, num)];\n    }\n    case 'oneHot': {\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      const depth = getParamValue('depth', node, tensorMap, context) as number;\n      const onValue =\n          getParamValue('onValue', node, tensorMap, context) as number;\n      const offValue =\n          getParamValue('offValue', node, tensorMap, context) as number;\n      return [tfc.oneHot(indices, depth, onValue, offValue)];\n    }\n    case 'ones': {\n      return [tfc.ones(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'onesLike': {\n      return [tfc.onesLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'randomUniform': {\n      return [tfc.randomUniform(\n          // tslint:disable-next-line:no-any\n          getParamValue('shape', node, tensorMap, context) as any,\n          getParamValue('minval', node, tensorMap, context) as number,\n          getParamValue('maxval', node, tensorMap, context) as number,\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'range': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const step = getParamValue('step', node, tensorMap, context) as number;\n      return [tfc.range(\n          start, stop, step,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32')];\n    }\n    case 'truncatedNormal': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const mean = getParamValue('mean', node, tensorMap, context) as number;\n      const stdDev =\n          getParamValue('stdDev', node, tensorMap, context) as number;\n      const seed = getParamValue('seed', node, tensorMap, context) as number;\n      return [tfc.truncatedNormal(\n          shape, mean, stdDev,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32',\n          seed)];\n    }\n    case 'zeros': {\n      return [tfc.zeros(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'zerosLike': {\n      return [tfc.zerosLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'creation';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\nimport {getParamValue} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'nonMaxSuppression': {\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const scores =\n          getParamValue('scores', node, tensorMap, context) as tfc.Tensor;\n      const maxOutputSize =\n          getParamValue('maxOutputSize', node, tensorMap, context) as number;\n      const iouThreshold =\n          getParamValue('iouThreshold', node, tensorMap, context) as number;\n      const scoreThreshold =\n          getParamValue('scoreThreshold', node, tensorMap, context) as number;\n      return [await tfc.image.nonMaxSuppressionAsync(\n          boxes as tfc.Tensor2D, scores as tfc.Tensor1D, maxOutputSize,\n          iouThreshold, scoreThreshold)];\n    }\n    case 'whereAsync': {\n      return [await tfc.whereAsync(\n          getParamValue('condition', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'dynamic';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'topK': {\n          const x = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n          const k = getParamValue('k', node, tensorMap, context) as number;\n          const sorted =\n              getParamValue('sorted', node, tensorMap, context) as boolean;\n          const result = tfc.topk(x, k, sorted);\n          return [result.values, result.indices];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'evaluation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'const': {\n      return tensorMap[node.name];\n    }\n    case 'placeholder':\n      const def =\n          getParamValue('default', node, tensorMap, context) as tfc.Tensor;\n      return [getTensor(node.name, tensorMap, context) || def];\n    case 'identity':\n    case 'stopGradient':\n    case 'fakeQuantWithMinMaxVars':  // This op is currently ignored.\n      return [getParamValue('x', node, tensorMap, context) as tfc.Tensor];\n    case 'snapshot':\n      const snapshot =\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor);\n      return [snapshot.clone()];\n    case 'shape':\n      return [tfc.tensor1d(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).shape,\n          'int32')];\n    case 'shapeN':\n      return (getParamValue('x', node, tensorMap, context) as tfc.Tensor[])\n          .map((t: tfc.Tensor) => tfc.tensor1d(t.shape));\n    case 'size':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).size,\n          'int32')];\n    case 'rank':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).rank,\n          'int32')];\n    case 'noop':\n      return [];\n    case 'print':\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor[];\n      const message =\n          getParamValue('message', node, tensorMap, context) as string;\n      const summarize =\n          getParamValue('summarize', node, tensorMap, context) as number;\n      console.warn(\n          'The graph has a tf.print() operation,' +\n          'usually used for debugging, which slows down performance.');\n      console.log(message);\n      for (let i = 0; i < data.length; i++) {\n        console.log(\n            Array.prototype.slice.call(data[0].dataSync()).slice(0, summarize));\n      }\n      return [input];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'graph';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'resizeBilinear': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeBilinear(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'resizeNearestNeighbor': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeNearestNeighbor(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'cropAndResize': {\n      const image =\n          getParamValue('image', node, tensorMap, context) as tfc.Tensor;\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const boxInd =\n          getParamValue('boxInd', node, tensorMap, context) as tfc.Tensor;\n      const cropSize =\n          getParamValue('cropSize', node, tensorMap, context) as number[];\n      const method =\n          getParamValue('method', node, tensorMap, context) as string;\n      const extrapolationValue =\n          getParamValue('extrapolationValue', node, tensorMap, context) as\n          number;\n      return [tfc.image.cropAndResize(\n          image as tfc.Tensor4D, boxes as tfc.Tensor2D, boxInd as tfc.Tensor1D,\n          cropSize as [number, number], method as 'bilinear' | 'nearest',\n          extrapolationValue)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'image';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'equal': {\n      return [tfc.equal(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'notEqual': {\n      return [tfc.notEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'greater': {\n      return [tfc.greater(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'greaterEqual': {\n      return [tfc.greaterEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'less': {\n      return [tfc.less(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'lessEqual': {\n      return [tfc.lessEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'logicalAnd': {\n      return [tfc.logicalAnd(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'logicalNot': {\n      return [tfc.logicalNot(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'logicalOr': {\n      return [tfc.logicalOr(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'where': {\n      return [tfc.where(\n          getParamValue('condition', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'logical';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'matMul':\n      return [tfc.matMul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('transposeA', node, tensorMap, context) as boolean,\n          getParamValue('transposeB', node, tensorMap, context) as boolean)];\n    case 'transpose':\n      return [tfc.transpose(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('perm', node, tensorMap, context) as number[])];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'matrices';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'batchNormalization': {\n          return [tfc.batchNormalization(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n              getParamValue('mean', node, tensorMap, context) as tfc.Tensor,\n              getParamValue('variance', node, tensorMap, context) as tfc.Tensor,\n              getParamValue('epsilon', node, tensorMap, context) as number,\n              getParamValue('scale', node, tensorMap, context) as tfc.Tensor,\n              getParamValue('offset', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'localResponseNormalization': {\n          return [tfc.localResponseNormalization(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('radius', node, tensorMap, context) as number,\n              getParamValue('bias', node, tensorMap, context) as number,\n              getParamValue('alpha', node, tensorMap, context) as number,\n              getParamValue('beta', node, tensorMap, context) as number)];\n        }\n        case 'softmax': {\n          return [tfc.softmax(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'normalization';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'max': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.max(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'mean': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.mean(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'min': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.min(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'sum': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.sum(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'all': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.all(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'any': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.any(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'argMax': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'argMin': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'reduction';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'concat': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const inputs =\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n      return [tfc.concat(inputs, axis)];\n    }\n    case 'gather': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      return [tfc.gather(input, indices, axis)];\n    }\n    case 'reverse': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      return [tfc.reverse(input, axis)];\n    }\n    case 'slice': {\n      // tslint:disable-next-line:no-any\n      const begin = getParamValue('begin', node, tensorMap, context) as any;\n      // tslint:disable-next-line:no-any\n      const size = getParamValue('size', node, tensorMap, context) as any;\n      return [tfc.slice(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, begin,\n          size)];\n    }\n    case 'stridedSlice': {\n      const begin =\n          getParamValue('begin', node, tensorMap, context) as number[];\n      const end = getParamValue('end', node, tensorMap, context) as number[];\n      const strides =\n          getParamValue('strides', node, tensorMap, context) as number[];\n      const beginMask =\n          getParamValue('beginMask', node, tensorMap, context) as number;\n      const endMask =\n          getParamValue('endMask', node, tensorMap, context) as number;\n      const ellipsisMask =\n          getParamValue('ellipsisMask', node, tensorMap, context) as number;\n      const newAxisMask =\n          getParamValue('newAxisMask', node, tensorMap, context) as number;\n      const shrinkAxisMask =\n          getParamValue('shrinkAxisMask', node, tensorMap, context) as number;\n      const tensor = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      if (begin.length === 1 && tensor.shape.length > 1) {\n        for (let i = 1; i < tensor.shape.length; i++) {\n          begin.push(0);\n          end.push(tensor.shape[i]);\n          strides.push(strides[0]);\n        }\n      }\n      return [tfc.stridedSlice(\n          tensor, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask)];\n    }\n    case 'stack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensors =\n            getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n        // Reshape the tensors to the first tensor's shape if they don't match.\n        const shape = tensors[0].shape;\n        const squeezedShape = tensors[0].squeeze().shape;\n        const mapped = tensors.map(tensor => {\n          const sameShape = tfc.util.arraysEqual(tensor.shape, shape);\n          if (!sameShape &&\n              !tfc.util.arraysEqual(tensor.squeeze().shape, squeezedShape)) {\n            throw new Error('the input tensors shape does not match');\n          }\n          return sameShape ? tensor : tensor.reshape(shape);\n        });\n        return [tfc.stack(mapped, axis)];\n      });\n    }\n    case 'unstack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensor =\n            getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n        return tfc.unstack(tensor, axis);\n      });\n    }\n    case 'tile': {\n      const reps = getParamValue('reps', node, tensorMap, context) as number[];\n      return [tfc.tile(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, reps)];\n    }\n    case 'split': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const numOrSizeSplits =\n          getParamValue('numOrSizeSplits', node, tensorMap, context) as number |\n          number[];\n      return tfc.split(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          numOrSizeSplits, axis);\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'slice_join';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\n\nimport {OpExecutor} from './types';\nimport {getParamValue, split} from './utils';\n\nexport let executeOp: OpExecutor = (node: Node, tensorMap: NamedTensorsMap,\n                                    context: ExecutionContext):\n                                       tfc.Tensor[] => {\n  switch (node.op) {\n    case 'cast': {\n      return [tfc.cast(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('dtype', node, tensorMap, context) as 'int32' |\n              'float32' | 'bool')];\n    }\n    case 'expandDims': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.expandDims(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'squeeze': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      return [tfc.squeeze(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n\n    case 'reshape': {\n      return [tfc.reshape(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('shape', node, tensorMap, context) as number[])];\n    }\n    case 'pad': {\n      return [tfc.pad(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          split(\n              getParamValue('padding', node, tensorMap, context) as number[],\n              2) as Array<[number, number]>,\n          getParamValue('constantValue', node, tensorMap, context) as number)];\n    }\n    case 'spaceToBatchND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const paddings = split(\n          getParamValue('paddings', node, tensorMap, context) as number[], 2);\n      return [tfc.spaceToBatchND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, paddings)];\n    }\n    case 'batchToSpaceND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const crops = split(\n          getParamValue('crops', node, tensorMap, context) as number[], 2);\n      return [tfc.batchToSpaceND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, crops)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'transformation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {ExecutionContext} from '../executor/execution_context';\n\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as transformation from './executors/transformation_executor';\nimport {Node} from './types';\n\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n */\nexport function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor[]|Promise<tfc.Tensor[]> {\n  switch (node.category) {\n    case 'arithmetic':\n      return arithmetic.executeOp(node, tensorMap, context);\n    case 'basic_math':\n      return basicMath.executeOp(node, tensorMap, context);\n    case 'control':\n      return control.executeOp(node, tensorMap, context);\n    case 'convolution':\n      return convolution.executeOp(node, tensorMap, context);\n    case 'creation':\n      return creation.executeOp(node, tensorMap, context);\n    case 'dynamic':\n      return dynamic.executeOp(node, tensorMap, context);\n    case 'evaluation':\n      return evaluation.executeOp(node, tensorMap, context);\n    case 'image':\n      return image.executeOp(node, tensorMap, context);\n    case 'graph':\n      return graph.executeOp(node, tensorMap, context);\n    case 'logical':\n      return logical.executeOp(node, tensorMap, context);\n    case 'matrices':\n      return matrices.executeOp(node, tensorMap, context);\n    case 'normalization':\n      return normalization.executeOp(node, tensorMap, context);\n    case 'reduction':\n      return reduction.executeOp(node, tensorMap, context);\n    case 'slice_join':\n      return sliceJoin.executeOp(node, tensorMap, context);\n    case 'transformation':\n      return transformation.executeOp(node, tensorMap, context);\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap, TensorArrayMap} from '../data/types';\n\nimport {TensorArray} from './tensor_array';\n\nexport interface ExecutionContextInfo {\n  id: number;           // the unique id of the context info\n  frameName: string;    // The frame name of the loop, this comes from\n                        // the TensorFlow NodeDef.\n  iterationId: number;  // The iteration id of the loop\n}\n\n/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n  private rootContext = {id: 0, frameName: '', iterationId: 0};\n  private contexts: ExecutionContextInfo[] = [this.rootContext];\n  private lastId = 0;\n  private _currentContextIds: string[];\n\n  constructor(\n      public readonly weightMap: NamedTensorsMap,\n      public readonly tensorArrayMap: TensorArrayMap) {\n    this.generateCurrentContextIds();\n  }\n\n  private newFrame(id: number, frameName: string) {\n    return {id, frameName, iterationId: 0};\n  }\n\n  /**\n   * Set the current context\n   * @param contexts: ExecutionContextInfo[] the current path of execution\n   * frames\n   */\n  set currentContext(contexts: ExecutionContextInfo[]) {\n    if (this.contexts !== contexts) {\n      this.contexts = contexts;\n      this.generateCurrentContextIds();\n    }\n  }\n\n  get currentContext(): ExecutionContextInfo[] {\n    return this.contexts;\n  }\n\n  /**\n   * Returns the current context in string format.\n   */\n  get currentContextId(): string {\n    return this._currentContextIds[0];\n  }\n\n  /**\n   * Returns the current context and all parent contexts in string format.\n   * This allow access to the nodes in the current and parent frames.\n   */\n  get currentContextIds(): string[] {\n    return this._currentContextIds;\n  }\n\n  private generateCurrentContextIds() {\n    const names = [];\n    for (let i = 0; i < this.contexts.length - 1; i++) {\n      const contexts = this.contexts.slice(0, this.contexts.length - i);\n      names.push(this.contextIdforContexts(contexts));\n    }\n    names.push('');\n    this._currentContextIds = names;\n  }\n\n  private contextIdforContexts(contexts: ExecutionContextInfo[]) {\n    return contexts ?\n        contexts\n            .map(\n                context => (context.id === 0 && context.iterationId === 0) ?\n                    '' :\n                    `${context.frameName}-${context.iterationId}`)\n            .join('/') :\n        '';\n  }\n\n  /**\n   * Enter a new frame, a new context is pushed on the current context list.\n   * @param frameId new frame id\n   */\n  enterFrame(frameId: string) {\n    if (this.contexts) {\n      this.lastId++;\n      this.contexts = this.contexts.slice();\n      this.contexts.push(this.newFrame(this.lastId, frameId));\n      this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n    }\n  }\n\n  /**\n   * Exit the current frame, the last context is removed from the current\n   * context list.\n   */\n  exitFrame() {\n    if (this.contexts && this.contexts.length > 1) {\n      this.contexts = this.contexts.slice();\n      this.contexts.splice(-1);\n      this.currentContextIds.shift();\n    } else {\n      throw new Error('Cannot exit frame, the context is empty');\n    }\n  }\n\n  /**\n   * Enter the next iteration of a loop, the iteration id of last context is\n   * increased.\n   */\n  nextIteration() {\n    if (this.contexts && this.contexts.length > 0) {\n      this.contexts = this.contexts.slice();\n      this.lastId++;\n      const context =\n          Object.assign({}, this.contexts[this.contexts.length - 1]) as\n          ExecutionContextInfo;\n      context.iterationId += 1;\n      context.id = this.lastId;\n      this.contexts.splice(-1, 1, context);\n      this._currentContextIds.splice(\n          0, 1, this.contextIdforContexts(this.contexts));\n    } else {\n      throw new Error('Cannot increase frame iteration, the context is empty');\n    }\n  }\n\n  getWeight(name: string): Tensor[] {\n    return this.weightMap[name];\n  }\n\n  addTensorArray(tensorArray: TensorArray) {\n    this.tensorArrayMap[tensorArray.id] = tensorArray;\n  }\n\n  getTensorArray(id: number): TensorArray {\n    return this.tensorArrayMap[id];\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\n// tslint:disable-next-line:max-line-length\nimport {NamedTensorMap, NamedTensorsMap, TensorArrayMap, TensorInfo} from '../data/types';\n// tslint:disable-next-line:max-line-length\nimport {getNodeNameAndIndex, getParamValue, getTensor} from '../operations/executors/utils';\nimport {executeOp} from '../operations/operation_executor';\nimport {Graph, Node} from '../operations/types';\n\nimport {ExecutionContext, ExecutionContextInfo} from './execution_context';\n\ninterface NodeWithContexts {\n  contexts: ExecutionContextInfo[];\n  node: Node;\n}\n\nexport class GraphExecutor {\n  private compiledMap: Map<string, Node[]> = new Map();\n  private _weightMap: NamedTensorsMap = {};\n  private weightIds: number[];\n  private placeholders: Node[];\n  private _outputs: Node[];\n  private SEPERATOR = ',';\n  get weightMap(): NamedTensorsMap {\n    return this._weightMap;\n  }\n  set weightMap(weightMap: NamedTensorsMap) {\n    const weightIds = Object.keys(weightMap).map(\n        key => weightMap[key].map(tensor => tensor.id));\n    this.weightIds = [].concat.apply([], weightIds);\n    this._weightMap = weightMap;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.placeholders.map(node => {\n      return {\n        name: node.name,\n        shape: node.params['shape'] ? node.params['shape'].value as number[] :\n                                      undefined,\n        dtype: node.params['dtype'] ? node.params['dtype'].value as DataType :\n                                      undefined\n      };\n    });\n  }\n\n  get outputs(): TensorInfo[] {\n    return this._outputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.params['shape'] ? node.params['shape'].value as number[] :\n                                      undefined,\n        dtype: node.params['dtype'] ? node.params['dtype'].value as DataType :\n                                      undefined\n      };\n    });\n  }\n\n  get inputNodes(): string[] {\n    return this.placeholders.map(node => node.name);\n  }\n\n  get outputNodes(): string[] {\n    return this.outputs.map(node => node.name);\n  }\n\n  constructor(private graph: Graph) {\n    this.placeholders = graph.placeholders;\n    this._outputs = graph.outputs;\n    this.compile();\n  }\n\n  get isControlFlowModel(): boolean {\n    return this.graph.withControlFlow;\n  }\n\n  get isDynamicShapeModel(): boolean {\n    return this.graph.withDynamicShape;\n  }\n\n  /**\n   * Compiles the inference graph to generate the topology order of op nodes,\n   * cache the result for inference execution.\n   */\n  private compile(startNodes?: Node[]) {\n    // Do not compile for graph with control flow, since the execution order\n    // requires runtime evaluation of the output tensors.\n    if (this.graph.withControlFlow || this.graph.withDynamicShape) {\n      return;\n    }\n    const compiledOrder = [];\n    const inputs = startNodes || this.graph.placeholders;\n    const sortedNodeNames = inputs.map(node => node.name).sort();\n    const nameKey = sortedNodeNames.join(this.SEPERATOR);\n\n    // do nothing is the compiled graph cache contains the input.\n    if (this.compiledMap.get(nameKey)) {\n      return;\n    }\n\n    const stack = [...inputs, ...this.graph.weights];\n    const visited: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const node = stack.pop();\n      visited[node.name] = true;\n      compiledOrder.push(node);\n      node.children.forEach((childNode) => {\n        if (!visited[childNode.name] && childNode.inputNames.every(name => {\n              const [nodeName, ] = getNodeNameAndIndex(name);\n              return visited[nodeName];\n            })) {\n          stack.push(childNode);\n        }\n      });\n    }\n    this.compiledMap.set(nameKey, compiledOrder);\n  }\n\n  /**\n   * Executes the inference for given input tensors.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  execute(\n      inputs: NamedTensorsMap, strictInputCheck = true,\n      outputs?: string|string[]): NamedTensorMap {\n    const names = Object.keys(inputs).sort();\n    this.checkInput(inputs, strictInputCheck);\n    this.checkInputShapeAndType(inputs, strictInputCheck);\n\n    this.compile(names.map(name => this.graph.nodes[name]));\n    const outputNames = this.calculateOutputs(outputs);\n    this.checkOutput(\n        this.compiledMap.get(names.join(this.SEPERATOR)), outputNames);\n\n    const tensorArrayMap: TensorArrayMap = {};\n    const result = tidy(() => {\n      const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n      const tensorMap = {...this.weightMap, ...inputs};\n      const compiledNodes = this.compiledMap.get(names.join(this.SEPERATOR));\n      for (let i = 0; i < compiledNodes.length; i++) {\n        const node = compiledNodes[i];\n        if (!tensorMap[node.name]) {\n          tensorMap[node.name] =\n              executeOp(node, tensorMap, context) as Tensor[];\n        }\n        // stop the execution if all outputs are found.\n        if (outputNames.every(name => !!tensorMap[name])) {\n          break;\n        }\n      }\n      return this.findOutputs(tensorMap, context, outputNames);\n    });\n    return result;\n  }\n\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  async executeAsync(inputs: NamedTensorsMap, outputs?: string|string[]):\n      Promise<NamedTensorMap> {\n    this.checkInput(inputs, false);\n    this.checkInputShapeAndType(inputs, false);\n    const tensorArrayMap: TensorArrayMap = {};\n    const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n    // Graph with control flow op requires runtime evaluation of the execution\n    // order, while without control flow the execution order is pre-determined\n    // in the compile method.\n    const tensors = await this.executeWithControlFlow(inputs, context);\n    const results = this.findOutputs(tensors, context, outputs);\n\n    // dispose all the intermediate tensors\n    const outputIds = Object.keys(results).map(key => results[key].id);\n    const inputIdArray =\n        Object.keys(inputs).map(key => inputs[key].map(input => input.id));\n    const inputIds = [].concat.apply([], inputIdArray);\n    Object.keys(tensors).forEach(key => {\n      const tensorArray = tensors[key];\n      tensorArray.forEach(tensor => {\n        if (tensor && outputIds.indexOf(tensor.id) === -1 &&\n            inputIds.indexOf(tensor.id) === -1 &&\n            this.weightIds.indexOf(tensor.id) === -1) {\n          tensor.dispose();\n        }\n      });\n    });\n    return results;\n  }\n\n  /**\n   * When there are control flow nodes in the graph, the graph execution use\n   * ExecutionContext to keep track of the frames and loop iterators.\n   * @param inputs placeholder tensors for the graph.\n   * @param context the execution context object for current execution.\n   */\n  private async executeWithControlFlow(\n      inputs: NamedTensorsMap,\n      context: ExecutionContext): Promise<NamedTensorsMap> {\n    const names = Object.keys(inputs);\n    const inputNodes = names.map(name => this.graph.nodes[name]);\n    const stack: NodeWithContexts[] =\n        [...inputNodes, ...this.graph.weights].map(node => {\n          return {node, contexts: context.currentContext};\n        });\n    const tensorMap = {...this.weightMap, ...inputs};\n    const added: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const promises =\n          this.processStack(inputNodes, stack, context, tensorMap, added);\n      await Promise.all(promises);\n    }\n\n    return tensorMap;\n  }\n\n  private processStack(\n      inputNodes: Node[], stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean}) {\n    const promises: Array<Promise<Tensor[]>> = [];\n    while (stack.length > 0) {\n      const item = stack.pop();\n      context.currentContext = item.contexts;\n      let nodeName = '';\n      // The tensor of the Enter op with isConstant set should be set\n      // in the parent scope, so it will be available as constant for the\n      // whole loop.\n      if (item.node.op === 'enter' &&\n          getParamValue('isConstant', item.node, tensorMap, context)) {\n        [nodeName] = getNodeNameAndIndex(item.node.name, context);\n      }\n\n      // only process nodes that are not provided as input nodes.\n      if (inputNodes.indexOf(item.node) === -1) {\n        const tensors = executeOp(item.node, tensorMap, context);\n        if (!nodeName) {\n          [nodeName] = getNodeNameAndIndex(item.node.name, context);\n        }\n\n        const currentContext = context.currentContext;\n        if (tensors instanceof Promise) {\n          promises.push(tensors.then(t => {\n            tensorMap[nodeName] = t;\n            context.currentContext = currentContext;\n            this.processChildNodes(item.node, stack, context, tensorMap, added);\n            return t;\n          }));\n        } else {\n          tensorMap[nodeName] = tensors;\n          this.processChildNodes(item.node, stack, context, tensorMap, added);\n        }\n      } else {\n        this.processChildNodes(item.node, stack, context, tensorMap, added);\n      }\n    }\n    return promises;\n  }\n\n  private processChildNodes(\n      node: Node, stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean}) {\n    node.children.forEach((childNode) => {\n      const [nodeName, ] = getNodeNameAndIndex(childNode.name, context);\n      if (!added[nodeName]) {\n        // Merge op can be pushed if any of its inputs has value.\n        if (childNode.op === 'merge') {\n          if (childNode.inputNames.some(name => {\n                return !!getTensor(name, tensorMap, context);\n              })) {\n            added[nodeName] = true;\n            stack.push({contexts: context.currentContext, node: childNode});\n          }\n        } else  // Otherwise all inputs must to have value.\n            if (childNode.inputNames.every(name => {\n                  return !!getTensor(name, tensorMap, context);\n                })) {\n          added[nodeName] = true;\n          stack.push({contexts: context.currentContext, node: childNode});\n        }\n      }\n    });\n  }\n\n  private calculateOutputs(outputs?: string|string[]): string[] {\n    if (outputs && !(outputs instanceof Array)) {\n      outputs = [outputs];\n    }\n    return (outputs || this.graph.outputs.map(node => node.name)) as string[];\n  }\n\n  private findOutputs(\n      tensorMap: NamedTensorsMap, context: ExecutionContext,\n      outputs?: string|string[]): NamedTensorMap {\n    const requestedOutputs = this.calculateOutputs(outputs);\n    return requestedOutputs.reduce<NamedTensorMap>((map, name) => {\n      map[name] = getTensor(name, tensorMap, context);\n      return map;\n    }, {});\n  }\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    Object.keys(this.weightMap)\n        .forEach(\n            key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n  }\n\n  private checkInputShapeAndType(\n      inputs: NamedTensorsMap, strictInputCheck = true) {\n    this.placeholders.forEach(node => {\n      const inputTensors = inputs[node.name];\n      // do nothing if not strict input check and input tensors is not for the\n      // placeholders.\n      if (!strictInputCheck && !inputTensors) {\n        return;\n      }\n\n      const input = inputTensors[0];\n      if (node.params['shape'] && node.params['shape'].value) {\n        const shape = node.params['shape'].value as number[];\n        const match = shape.length === input.shape.length &&\n            input.shape.every(\n                (dim, index) => shape[index] === -1 || shape[index] === dim);\n        util.assert(\n            match,\n            `The shape of dict['${\n                node.name}'] provided in model.execute(dict) must be [${\n                shape}], but was [${input.shape}]`);\n      }\n      if (node.params['dtype'] && node.params['dtype'].value) {\n        util.assert(\n            input.dtype === node.params['dtype'].value as string,\n            `The dtype of dict['${\n                node.name}'] provided in model.execute(dict) must be ${\n                node.params['dtype'].value}, but was ${input.dtype}`);\n      }\n    });\n  }\n\n  private checkInput(inputs: NamedTensorsMap, strictInputCheck = true) {\n    const inputKeys = Object.keys(inputs);\n    const missing: string[] = [];\n    const extra: string[] = [];\n\n    this.inputNodes.forEach(name => {\n      if (inputKeys.indexOf(name) === -1) missing.push(name);\n    });\n\n    inputKeys.forEach(name => {\n      if (this.inputNodes.indexOf(name) === -1) extra.push(name);\n    });\n\n    const notInGraph = extra.filter(name => !this.graph.nodes[name]);\n\n    if (missing.length > 0 && strictInputCheck) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has the keys ` +\n          `[${inputKeys}], but is missing the required keys: [${missing}].`);\n    }\n\n    if (extra.length > 0 && strictInputCheck) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `unused keys: [${extra}]. Please provide only the following keys: ` +\n          `[${this.inputNodes}].`);\n    }\n\n    if (notInGraph.length > 0) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `keys: [${notInGraph}] not part of model graph.`);\n    }\n  }\n\n  private checkOutput(compiledNodes: Node[], outputs: string[]) {\n    const compiledNodeNames = compiledNodes.map(node => node.name);\n    const extra: string[] = [];\n    outputs.forEach(name => {\n      if (compiledNodeNames.indexOf(name) === -1) extra.push(name);\n    });\n\n    if (extra.length > 0) {\n      throw new Error(\n          `The following outputs are not be generated by the execution: ` +\n          `[${extra}].`);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {tensorflow} from '../data/compiled_api';\nimport {NamedTensorsMap, TensorInfo} from '../data/types';\nimport {OperationMapper} from '../operations/operation_mapper';\n\nimport {GraphExecutor} from './graph_executor';\n\n/**\n * A `FrozenModel` is a directed, acyclic graph of built from\n * SavedModel GraphDef and allows inference exeuction.\n */\n\n/** @doc {heading: 'Models', subheading: 'Classes'} */\nexport class FrozenModel implements tfc.InferenceModel {\n  private executor: GraphExecutor;\n  private version = 'n/a';\n  private handler: tfc.io.IOHandler;\n  // Returns the version information for the tensorflow model GraphDef.\n  get modelVersion(): string {\n    return this.version;\n  }\n\n  get inputNodes(): string[] {\n    return this.executor.inputNodes;\n  }\n\n  get outputNodes(): string[] {\n    return this.executor.outputNodes;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.executor.inputs;\n  }\n\n  get outputs(): TensorInfo[] {\n    return this.executor.outputs;\n  }\n\n  get weights(): NamedTensorsMap {\n    return this.executor.weightMap;\n  }\n\n  /**\n   * @param modelUrl url for the model file generated by scripts/convert.py\n   * script.\n   * @param weightManifestUrl url for the weight file generated by\n   * scripts/convert.py script.\n   * @param requestOption options for Request, which allows to send credentials\n   * and custom headers.\n   */\n  constructor(\n      private modelUrl: string, private weightManifestUrl: string,\n      private requestOption?: RequestInit) {}\n\n  private findIOHandler() {\n    const path = [this.modelUrl, this.weightManifestUrl];\n    if (this.requestOption) {\n      this.handler = tfc.io.browserHTTPRequest(path, this.requestOption);\n    } else {\n      const handlers = tfc.io.getLoadHandlers(path);\n      if (handlers.length === 0) {\n        // For backward compatibility: if no load handler can be found,\n        // assume it is a relative http path.\n        handlers.push(tfc.io.browserHTTPRequest(path, this.requestOption));\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) load handlers for ` +\n            `URL '${[path]}'`);\n      }\n      this.handler = handlers[0];\n    }\n  }\n\n  /**\n   * Loads the model and weight files, construct the in memory weight map and\n   * compile the inference graph.\n   */\n  async load(): Promise<boolean> {\n    this.findIOHandler();\n    if (this.handler.load == null) {\n      throw new Error(\n          'Cannot proceed with model loading because the IOHandler provided ' +\n          'does not have the `load` method implemented.');\n    }\n    const artifacts = await this.handler.load();\n    const graph = tensorflow.GraphDef.decode(\n        new Uint8Array(artifacts.modelTopology as ArrayBuffer));\n\n    this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n    const weightMap =\n        tfc.io.decodeWeights(artifacts.weightData, artifacts.weightSpecs);\n    this.executor =\n        new GraphExecutor(OperationMapper.Instance.transformGraph(graph));\n    this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n    return true;\n  }\n\n  /**\n   * Execute the inference for the input tensors.\n   *\n   * @param input The input tensors, when there is single input for the model,\n   * inputs param should be a Tensor. For models with mutliple inputs, inputs\n   * params should be in either Tensor[] if the input order is fixed, or\n   * otherwise NamedTensorMap format.\n   *\n   * For model with multiple inputs, we recommend you use NamedTensorMap as the\n   * input type, if you use Tensor[], the order of the array needs to follow the\n   * order of inputNodes array. @see {@link FrozenModel.inputNodes}\n   *\n   * You can also feed any intermediate nodes using the NamedTensorMap as the\n   * input type. For example, given the graph\n   *    InputNode => Intermediate => OutputNode,\n   * you can execute the subgraph Intermediate => OutputNode by calling\n   *    frozenModel.execute('IntermediateNode' : tf.tensor(...));\n   *\n   * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n   * state needs to be fed manually.\n   *\n   * For batch inference execution, the tensors for each input need to be\n   * concatenated together. For example with mobilenet, the required input shape\n   * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n   * If we are provide a batched data of 100 images, the input tensor should be\n   * in the shape of [100, 244, 244, 3].\n   *\n   * @param config Prediction configuration for specifying the batch size and\n   * output node names. Currently the batch size option is ignored for frozen\n   * model.\n   *\n   * @returns Inference result tensors. The output would be single Tensor if\n   * model has single output node, otherwise Tensor[] or NamedTensorMap[] will\n   * be returned for model with multiple outputs.\n   */\n  predict(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      config?: tfc.ModelPredictConfig): tfc.Tensor\n      |tfc.Tensor[]|tfc.NamedTensorMap {\n    return this.execute_(inputs, true, this.outputNodes);\n  }\n\n  private constructTensorMap(inputs: tfc.Tensor|tfc.Tensor[]) {\n    const inputArray = inputs instanceof tfc.Tensor ? [inputs] : inputs;\n    if (inputArray.length !== this.inputNodes.length) {\n      throw new Error(\n          'Input tensor count mismatch,' +\n          `the frozen model has ${this.inputNodes.length} placeholders, ` +\n          `while there are ${inputArray.length} input tensors.`);\n    }\n    return this.inputNodes.reduce((map, inputName, i) => {\n      map[inputName] = inputArray[i];\n      return map;\n    }, {} as tfc.NamedTensorMap);\n  }\n  /**\n   * Executes infrerence for the model for given input tensors.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no\n   * outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   *\n   * @returns A single tensor if provided with a single output or no outputs\n   * are provided and there is only one default output, otherwise return a\n   * tensor array. The order of the tensor array is the same as the outputs\n   * if provided, otherwise the order of outputNodes attribute of the model.\n   */\n  execute(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      outputs?: string|string[]): tfc.Tensor|tfc.Tensor[] {\n    return this.execute_(inputs, false, outputs);\n  }\n\n  private execute_(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      strictInputCheck = true, outputs?: string|string[]): tfc.Tensor\n      |tfc.Tensor[] {\n    outputs = outputs || this.outputNodes;\n    if (inputs instanceof tfc.Tensor || Array.isArray(inputs)) {\n      inputs = this.constructTensorMap(inputs);\n    }\n    if (this.executor.isControlFlowModel || this.executor.isDynamicShapeModel) {\n      throw new Error(\n          'The model contains control flow or dynamic shape ops, ' +\n          'please use executeAsync method');\n    }\n    const result = this.executor.execute(\n        this.convertTensorMapToTensorsMap(inputs), strictInputCheck, outputs);\n    const keys = Object.keys(result);\n    return (Array.isArray(outputs) && outputs.length > 1) ?\n        outputs.map(node => result[node]) :\n        result[keys[0]];\n  }\n  /**\n   * Executes inference for the model for given input tensors in async\n   * fashion, use this method when your model contains control flow ops.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   *\n   * @returns A Promise of single tensor if provided with a single output or\n   * no outputs are provided and there is only one default output, otherwise\n   * return a tensor map.\n   */\n  async executeAsync(\n      inputs: tfc.Tensor|tfc.Tensor[]|tfc.NamedTensorMap,\n      outputs?: string|string[]): Promise<tfc.Tensor|tfc.Tensor[]> {\n    if (!(this.executor.isControlFlowModel ||\n          this.executor.isDynamicShapeModel)) {\n      throw new Error(\n          'The model does not contain control flow or dynamic shape ops, ' +\n          'please use execute method for better performance.');\n    }\n    outputs = outputs || this.outputNodes;\n    if (inputs instanceof tfc.Tensor || Array.isArray(inputs)) {\n      inputs = this.constructTensorMap(inputs);\n    }\n\n    const result = await this.executor.executeAsync(\n        this.convertTensorMapToTensorsMap(inputs), outputs);\n    const keys = Object.keys(result);\n    return Array.isArray(outputs) && outputs.length > 1 ?\n        outputs.map(node => result[node]) :\n        result[keys[0]];\n  }\n\n  private convertTensorMapToTensorsMap(map: tfc.NamedTensorMap):\n      NamedTensorsMap {\n    return Object.keys(map).reduce((newMap: NamedTensorsMap, key) => {\n      newMap[key] = [map[key]];\n      return newMap;\n    }, {});\n  }\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    this.executor.dispose();\n  }\n}\n\n/**\n * Load the frozen model through url.\n *\n * Example of loading the MobileNetV2 model and making a prediction with a zero\n * input.\n *\n * ```js\n * const GOOGLE_CLOUD_STORAGE_DIR =\n *     'https://storage.googleapis.com/tfjs-models/savedmodel/';\n * const MODEL_URL = 'mobilenet_v2_1.0_224/tensorflowjs_model.pb';\n * const WEIGHTS_URL =\n *     'mobilenet_v2_1.0_224/weights_manifest.json';\n * const model = await tf.loadFrozenModel(GOOGLE_CLOUD_STORAGE_DIR + MODEL_URL,\n *      GOOGLE_CLOUD_STORAGE_DIR + WEIGHTS_URL);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * @param modelUrl url for the model file generated by scripts/convert.py\n * script.\n * @param weightManifestUrl url for the weight file generated by\n * scripts/convert.py script.\n * @param requestOption options for Request, which allows to send credentials\n * and custom headers.\n */\n/** @doc {heading: 'Models', subheading: 'Loading'} */\nexport async function loadFrozenModel(\n    modelUrl: string, weightsManifestUrl: string,\n    requestOption?: RequestInit): Promise<FrozenModel> {\n  const model = new FrozenModel(modelUrl, weightsManifestUrl, requestOption);\n  await model.load();\n  return model;\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '0.6.1';\nexport {version};\n"],"names":["util","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","LongBits","BufferWriter","Writer","utf8","BufferReader","Reader","$protobuf","json","tensorflow","tfc.add","tfc.addN","tfc.mod","tfc.mul","tfc.div","tfc.floorDiv","tfc.sub","tfc.minimum","tfc.maximum","tfc.pow","tfc.squaredDifference","executeOp","tfc.abs","tfc.acos","tfc.acosh","tfc.asin","tfc.asinh","tfc.atan","tfc.atanh","tfc.ceil","tfc.cos","tfc.cosh","tfc.elu","tfc.erf","tfc.exp","tfc.expm1","tfc.floor","tfc.log","tfc.log1p","tfc.neg","tfc.reciprocal","tfc.relu","tfc.round","tfc.selu","tfc.sigmoid","tfc.sin","tfc.sign","tfc.sinh","tfc.softplus","tfc.sqrt","tfc.square","tfc.tanh","tfc.tan","tfc.clipByValue","tfc.scalar","tensor","stack","concat","unstack","tidy","slice","scalar","tfc.conv1d","tfc.conv2d","tfc.conv2dTranspose","tfc.depthwiseConv2d","tfc.avgPool","tfc.maxPool","tfc.fill","tfc.linspace","tfc.oneHot","tfc.ones","tfc.onesLike","tfc.randomUniform","tfc.range","tfc.truncatedNormal","tfc.zeros","tfc.zerosLike","tfc.image","tfc.whereAsync","tfc.topk","tfc.tensor1d","tfc.equal","tfc.notEqual","tfc.greater","tfc.greaterEqual","tfc.less","tfc.lessEqual","tfc.logicalAnd","tfc.logicalNot","tfc.logicalOr","tfc.where","tfc.matMul","tfc.transpose","tfc.batchNormalization","tfc.localResponseNormalization","tfc.softmax","tfc.max","tfc.mean","tfc.min","tfc.sum","tfc.all","tfc.any","tfc.argMax","tfc.argMin","tfc.concat","tfc.gather","tfc.reverse","tfc.slice","tfc.stridedSlice","tfc.tidy","tfc.util","tfc.stack","tfc.unstack","tfc.tile","tfc.split","tfc.cast","tfc.expandDims","tfc.squeeze","tfc.reshape","tfc.pad","tfc.spaceToBatchND","tfc.batchToSpaceND","arithmetic.executeOp","basicMath.executeOp","control.executeOp","convolution.executeOp","creation.executeOp","dynamic.executeOp","evaluation.executeOp","image.executeOp","graph.executeOp","logical.executeOp","matrices.executeOp","normalization.executeOp","reduction.executeOp","sliceJoin.executeOp","transformation.executeOp","tfc.io","tfc.Tensor"],"mappings":"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"}